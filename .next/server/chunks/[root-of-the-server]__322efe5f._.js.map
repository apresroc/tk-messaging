{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Anthony/dyad-apps/TK%20Messaging/src/app/api/user/settings/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\r\nimport { writeFile, readFile } from \"fs/promises\";\r\nimport { join } from \"path\";\r\nimport { existsSync, mkdirSync } from \"fs\";\r\n\r\nconst DATA_DIR = join(process.cwd(), \"data\");\r\nconst USER_SETTINGS_FILE = join(DATA_DIR, \"user-settings.json\");\r\n\r\n// Ensure data directory exists\r\nif (!existsSync(DATA_DIR)) {\r\n  mkdirSync(DATA_DIR, { recursive: true });\r\n}\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    const { searchParams } = new URL(request.url);\r\n    const userId = searchParams.get(\"userId\");\r\n\r\n    if (!userId) {\r\n      return NextResponse.json(\r\n        { error: \"User ID is required\" },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    const data = await readFile(USER_SETTINGS_FILE, \"utf8\").catch(() => \"{}\");\r\n    const allSettings = JSON.parse(data);\r\n    const userSettings = allSettings[userId] || getDefaultSettings();\r\n\r\n    return NextResponse.json(userSettings);\r\n  } catch (error) {\r\n    console.error(\"Error loading user settings:\", error);\r\n    return NextResponse.json(\r\n      { error: \"Failed to load settings\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const { userId, settings } = await request.json();\r\n\r\n    if (!userId) {\r\n      return NextResponse.json(\r\n        { error: \"User ID is required\" },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    const data = await readFile(USER_SETTINGS_FILE, \"utf8\").catch(() => \"{}\");\r\n    const allSettings = JSON.parse(data);\r\n    \r\n    allSettings[userId] = settings;\r\n    \r\n    await writeFile(USER_SETTINGS_FILE, JSON.stringify(allSettings, null, 2));\r\n    \r\n    return NextResponse.json({ success: true, settings });\r\n  } catch (error) {\r\n    console.error(\"Error saving user settings:\", error);\r\n    return NextResponse.json(\r\n      { error: \"Failed to save settings\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\nfunction getDefaultSettings() {\r\n  return {\r\n    notifications: {\r\n      email: true,\r\n      sms: true,\r\n      push: true,\r\n    },\r\n    sounds: {\r\n      message: true,\r\n      notification: true,\r\n      volume: 80,\r\n      messageSound: 'default',\r\n      notificationSound: 'chime',\r\n    },\r\n    theme: {\r\n      mode: 'light',\r\n    },\r\n    privacy: {\r\n      readReceipts: true,\r\n      typingIndicators: true,\r\n    },\r\n    profile: {\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      username: '',\r\n    },\r\n  };\r\n}\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AACA;;;;;AAEA,MAAM,WAAW,IAAA,yGAAI,EAAC,QAAQ,GAAG,IAAI;AACrC,MAAM,qBAAqB,IAAA,yGAAI,EAAC,UAAU;AAE1C,+BAA+B;AAC/B,IAAI,CAAC,IAAA,2GAAU,EAAC,WAAW;IACzB,IAAA,0GAAS,EAAC,UAAU;QAAE,WAAW;IAAK;AACxC;AAEO,eAAe,IAAI,OAAoB;IAC5C,IAAI;QACF,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;QAC5C,MAAM,SAAS,aAAa,GAAG,CAAC;QAEhC,IAAI,CAAC,QAAQ;YACX,OAAO,+QAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAsB,GAC/B;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,OAAO,MAAM,IAAA,iIAAQ,EAAC,oBAAoB,QAAQ,KAAK,CAAC,IAAM;QACpE,MAAM,cAAc,KAAK,KAAK,CAAC;QAC/B,MAAM,eAAe,WAAW,CAAC,OAAO,IAAI;QAE5C,OAAO,+QAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,OAAO,+QAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA0B,GACnC;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,QAAQ,IAAI;QAE/C,IAAI,CAAC,QAAQ;YACX,OAAO,+QAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAsB,GAC/B;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,OAAO,MAAM,IAAA,iIAAQ,EAAC,oBAAoB,QAAQ,KAAK,CAAC,IAAM;QACpE,MAAM,cAAc,KAAK,KAAK,CAAC;QAE/B,WAAW,CAAC,OAAO,GAAG;QAEtB,MAAM,IAAA,kIAAS,EAAC,oBAAoB,KAAK,SAAS,CAAC,aAAa,MAAM;QAEtE,OAAO,+QAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAM;QAAS;IACrD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,OAAO,+QAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA0B,GACnC;YAAE,QAAQ;QAAI;IAElB;AACF;AAEA,SAAS;IACP,OAAO;QACL,eAAe;YACb,OAAO;YACP,KAAK;YACL,MAAM;QACR;QACA,QAAQ;YACN,SAAS;YACT,cAAc;YACd,QAAQ;YACR,cAAc;YACd,mBAAmB;QACrB;QACA,OAAO;YACL,MAAM;QACR;QACA,SAAS;YACP,cAAc;YACd,kBAAkB;QACpB;QACA,SAAS;YACP,MAAM;YACN,OAAO;YACP,OAAO;YACP,UAAU;QACZ;IACF;AACF","debugId":null}}]
}