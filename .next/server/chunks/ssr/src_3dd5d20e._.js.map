{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Anthony/dyad-apps/TK%20Messaging/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nCard.displayName = \"Card\";\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n));\r\nCardHeader.displayName = \"CardHeader\";\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h3\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nCardTitle.displayName = \"CardTitle\";\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <p\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n));\r\nCardDescription.displayName = \"CardDescription\";\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n));\r\nCardContent.displayName = \"CardContent\";\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n));\r\nCardFooter.displayName = \"CardFooter\";\r\n\r\nexport {\r\n  Card,\r\n  CardHeader,\r\n  CardFooter,\r\n  CardTitle,\r\n  CardDescription,\r\n  CardContent,\r\n};\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,kVAAgB,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6WAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,kVAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6WAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,kVAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6WAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,kVAAgB,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6WAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,kVAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6WAAC;QAAI,KAAK;QAAK,WAAW,IAAA,yHAAE,EAAC,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,kVAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6WAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Anthony/dyad-apps/TK%20Messaging/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { Slot } from \"@radix-ui/react-slot\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\r\n        outline:\r\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-10 px-4 py-2\",\r\n        sm: \"h-9 rounded-md px-3\",\r\n        lg: \"h-11 rounded-md px-8\",\r\n        icon: \"h-10 w-10\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  },\r\n);\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean;\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\";\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    );\r\n  },\r\n);\r\nButton.displayName = \"Button\";\r\n\r\nexport { Button, buttonVariants };\r\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,IAAA,kPAAG,EACxB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,kVAAgB,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,6SAAI,GAAG;IAC9B,qBACE,6WAAC;QACC,WAAW,IAAA,yHAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Anthony/dyad-apps/TK%20Messaging/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n          className,\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    );\r\n  },\r\n);\r\nInput.displayName = \"Input\";\r\n\r\nexport { Input };\r\n"],"names":[],"mappings":";;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,kVAAgB,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6WAAC;QACC,MAAM;QACN,WAAW,IAAA,yHAAE,EACX,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Anthony/dyad-apps/TK%20Messaging/src/components/ui/label.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst labelVariants = cva(\r\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\r\n);\r\n\r\nconst Label = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\r\n    VariantProps<typeof labelVariants>\r\n>(({ className, ...props }, ref) => (\r\n  <LabelPrimitive.Root\r\n    ref={ref}\r\n    className={cn(labelVariants(), className)}\r\n    {...props}\r\n  />\r\n));\r\nLabel.displayName = LabelPrimitive.Root.displayName;\r\n\r\nexport { Label };\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,gBAAgB,IAAA,kPAAG,EACvB;AAGF,MAAM,sBAAQ,kVAAgB,CAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6WAAC,sRAAmB;QAClB,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,sRAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Anthony/dyad-apps/TK%20Messaging/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nexport interface TextareaProps\r\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\r\n\r\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\r\n  ({ className, ...props }, ref) => {\r\n    return (\r\n      <textarea\r\n        className={cn(\r\n          \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\r\n          className,\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    );\r\n  },\r\n);\r\nTextarea.displayName = \"Textarea\";\r\n\r\nexport { Textarea };\r\n"],"names":[],"mappings":";;;;;AAAA;AAEA;;;;AAKA,MAAM,yBAAW,kVAAgB,CAC/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IACxB,qBACE,6WAAC;QACC,WAAW,IAAA,yHAAE,EACX,wSACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 234, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Anthony/dyad-apps/TK%20Messaging/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst Table = React.forwardRef<\r\n  HTMLTableElement,\r\n  React.HTMLAttributes<HTMLTableElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div className=\"relative w-full overflow-auto\">\r\n    <table\r\n      ref={ref}\r\n      className={cn(\"w-full caption-bottom text-sm\", className)}\r\n      {...props}\r\n    />\r\n  </div>\r\n));\r\nTable.displayName = \"Table\";\r\n\r\nconst TableHeader = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\r\n));\r\nTableHeader.displayName = \"TableHeader\";\r\n\r\nconst TableBody = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tbody\r\n    ref={ref}\r\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\r\n    {...props}\r\n  />\r\n));\r\nTableBody.displayName = \"TableBody\";\r\n\r\nconst TableFooter = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tfoot\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nTableFooter.displayName = \"TableFooter\";\r\n\r\nconst TableRow = React.forwardRef<\r\n  HTMLTableRowElement,\r\n  React.HTMLAttributes<HTMLTableRowElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tr\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nTableRow.displayName = \"TableRow\";\r\n\r\nconst TableHead = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.ThHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <th\r\n    ref={ref}\r\n    className={cn(\r\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nTableHead.displayName = \"TableHead\";\r\n\r\nconst TableCell = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.TdHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <td\r\n    ref={ref}\r\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\r\n    {...props}\r\n  />\r\n));\r\nTableCell.displayName = \"TableCell\";\r\n\r\nconst TableCaption = React.forwardRef<\r\n  HTMLTableCaptionElement,\r\n  React.HTMLAttributes<HTMLTableCaptionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <caption\r\n    ref={ref}\r\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n));\r\nTableCaption.displayName = \"TableCaption\";\r\n\r\nexport {\r\n  Table,\r\n  TableHeader,\r\n  TableBody,\r\n  TableFooter,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableCaption,\r\n};\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,kVAAgB,CAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6WAAC;QAAI,WAAU;kBACb,cAAA,6WAAC;YACC,KAAK;YACL,WAAW,IAAA,yHAAE,EAAC,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,kVAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6WAAC;QAAM,KAAK;QAAK,WAAW,IAAA,yHAAE,EAAC,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,kVAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6WAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,kVAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6WAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,kVAAgB,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6WAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,kVAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6WAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,kVAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6WAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,kVAAgB,CAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6WAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 350, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Anthony/dyad-apps/TK%20Messaging/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst badgeVariants = cva(\r\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\r\n        secondary:\r\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        destructive:\r\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\r\n        outline: \"text-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  },\r\n);\r\n\r\nexport interface BadgeProps\r\n  extends React.HTMLAttributes<HTMLDivElement>,\r\n    VariantProps<typeof badgeVariants> {}\r\n\r\nfunction Badge({ className, variant, ...props }: BadgeProps) {\r\n  return (\r\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\r\n  );\r\n}\r\n\r\nexport { Badge, badgeVariants };\r\n"],"names":[],"mappings":";;;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,IAAA,kPAAG,EACvB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6WAAC;QAAI,WAAW,IAAA,yHAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 392, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Anthony/dyad-apps/TK%20Messaging/src/lib/twilio-client.ts"],"sourcesContent":["// Twilio client that uses the server-side API endpoint\n// This ensures Twilio credentials stay secure on the server\n\nexport class TwilioClient {\n  private isInitialized: boolean = false;\n\n  initialize(accountSid: string, authToken: string, fromNumber: string) {\n    // Store credentials for validation (not used for actual API calls)\n    this.isInitialized = true;\n    console.log('Twilio client initialized with:', { accountSid, fromNumber });\n  }\n\n  async sendMessage(to: string, body: string, mediaUrl?: string[]) {\n    try {\n      console.log('Sending message via API:', { to, body, mediaUrl });\n      \n      const response = await fetch('/api/twilio/send-message', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ to, body, mediaUrl }),\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        return {\n          success: true,\n          messageId: result.messageId,\n          status: result.status\n        };\n      } else {\n        const error = await response.json();\n        return {\n          success: false,\n          error: error.error || 'Failed to send message'\n        };\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      return {\n        success: false,\n        error: 'Network error'\n      };\n    }\n  }\n\n  async getMessages(to: string) {\n    // For now, return mock messages since we don't have a get messages API yet\n    console.log('Fetching messages for:', to);\n    \n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 500));\n    \n    // Return mock messages\n    return [\n      {\n        id: `MM${Math.random().toString(36).substr(2, 9)}`,\n        body: 'Hello! This is a sample message.',\n        direction: 'inbound',\n        timestamp: new Date(),\n        status: 'delivered'\n      }\n    ];\n  }\n}\n\nexport const twilioClient = new TwilioClient();"],"names":[],"mappings":"AAAA,uDAAuD;AACvD,4DAA4D;;;;;;;AAErD,MAAM;IACH,gBAAyB,MAAM;IAEvC,WAAW,UAAkB,EAAE,SAAiB,EAAE,UAAkB,EAAE;QACpE,mEAAmE;QACnE,IAAI,CAAC,aAAa,GAAG;QACrB,QAAQ,GAAG,CAAC,mCAAmC;YAAE;YAAY;QAAW;IAC1E;IAEA,MAAM,YAAY,EAAU,EAAE,IAAY,EAAE,QAAmB,EAAE;QAC/D,IAAI;YACF,QAAQ,GAAG,CAAC,4BAA4B;gBAAE;gBAAI;gBAAM;YAAS;YAE7D,MAAM,WAAW,MAAM,MAAM,4BAA4B;gBACvD,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBAAE;oBAAI;oBAAM;gBAAS;YAC5C;YAEA,IAAI,SAAS,EAAE,EAAE;gBACf,MAAM,SAAS,MAAM,SAAS,IAAI;gBAClC,OAAO;oBACL,SAAS;oBACT,WAAW,OAAO,SAAS;oBAC3B,QAAQ,OAAO,MAAM;gBACvB;YACF,OAAO;gBACL,MAAM,QAAQ,MAAM,SAAS,IAAI;gBACjC,OAAO;oBACL,SAAS;oBACT,OAAO,MAAM,KAAK,IAAI;gBACxB;YACF;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,0BAA0B;YACxC,OAAO;gBACL,SAAS;gBACT,OAAO;YACT;QACF;IACF;IAEA,MAAM,YAAY,EAAU,EAAE;QAC5B,2EAA2E;QAC3E,QAAQ,GAAG,CAAC,0BAA0B;QAEtC,qBAAqB;QACrB,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;QAEjD,uBAAuB;QACvB,OAAO;YACL;gBACE,IAAI,CAAC,EAAE,EAAE,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,MAAM,CAAC,GAAG,IAAI;gBAClD,MAAM;gBACN,WAAW;gBACX,WAAW,IAAI;gBACf,QAAQ;YACV;SACD;IACH;AACF;AAEO,MAAM,eAAe,IAAI","debugId":null}},
    {"offset": {"line": 472, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Anthony/dyad-apps/TK%20Messaging/src/components/admin/AdminDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { \n  Table, \n  TableBody, \n  TableCell, \n  TableHead, \n  TableHeader, \n  TableRow \n} from '@/components/ui/table';\nimport { Badge } from '@/components/ui/badge';\nimport { Customer, AdminSettings } from '@/lib/types';\nimport { twilioClient } from '@/lib/twilio-client';\nimport { toast } from 'sonner';\nimport { motion } from 'framer-motion';\nimport { Settings, Users, MessageSquare, Zap, Shield, Key, Phone, Globe, Paperclip, Image, Video } from 'lucide-react';\n\nconst AdminDashboard = () => {\n  const [settings, setSettings] = useState<AdminSettings>({\n    twilioAccountSid: '',\n    twilioAuthToken: '',\n    twilioPhoneNumber: '',\n    webhookUrl: ''\n  });\n  \n  const [customers, setCustomers] = useState<Customer[]>([]);\n  const [newCustomer, setNewCustomer] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    username: '',\n    password: ''\n  });\n  \n  const [testMessage, setTestMessage] = useState({\n    to: '',\n    body: '',\n    media: [] as File[]\n  });\n  \n  const [mediaPreviews, setMediaPreviews] = useState<string[]>([]);\n\n  // Load settings and customers from API on component mount\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        // Load settings\n        const settingsResponse = await fetch('/api/admin/settings');\n        if (settingsResponse.ok) {\n          const savedSettings = await settingsResponse.json();\n          setSettings(savedSettings);\n          \n          // Initialize Twilio client if settings are available\n          if (savedSettings.twilioAccountSid && savedSettings.twilioAuthToken && savedSettings.twilioPhoneNumber) {\n            twilioClient.initialize(\n              savedSettings.twilioAccountSid,\n              savedSettings.twilioAuthToken,\n              savedSettings.twilioPhoneNumber\n            );\n          }\n        }\n        \n        // Load customers\n        const customersResponse = await fetch('/api/admin/customers');\n        if (customersResponse.ok) {\n          const savedCustomers = await customersResponse.json();\n          setCustomers(savedCustomers);\n        }\n      } catch (error) {\n        console.error('Error loading data:', error);\n        toast.error('Failed to load data');\n      }\n    };\n    \n    loadData();\n  }, []);\n\n  const handleSettingsChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    const newSettings = { ...settings, [name]: value };\n    setSettings(newSettings);\n    \n    // Save to API\n    try {\n      const response = await fetch('/api/admin/settings', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(newSettings),\n      });\n      \n      if (response.ok) {\n        // Initialize Twilio client if all required fields are present\n        if (newSettings.twilioAccountSid && newSettings.twilioAuthToken && newSettings.twilioPhoneNumber) {\n          twilioClient.initialize(\n            newSettings.twilioAccountSid,\n            newSettings.twilioAuthToken,\n            newSettings.twilioPhoneNumber\n          );\n        }\n      } else {\n        const errorData = await response.json();\n        console.error('Settings save failed:', errorData);\n        toast.error(`Failed to save settings: ${errorData.error || 'Unknown error'}`);\n      }\n    } catch (error) {\n      console.error('Error saving settings:', error);\n      toast.error('Failed to save settings - network error');\n    }\n  };\n\n  const handleAddCustomer = async () => {\n    if (!newCustomer.name || !newCustomer.phone || !newCustomer.username || !newCustomer.password) {\n      toast.error('Name, phone number, username, and password are required');\n      return;\n    }\n    \n    try {\n      const response = await fetch('/api/admin/customers', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(newCustomer),\n      });\n      \n      if (response.ok) {\n        const result = await response.json();\n        setCustomers(prev => [...prev, result.customer]);\n        setNewCustomer({ name: '', email: '', phone: '', username: '', password: '' });\n        toast.success('Customer added successfully');\n      } else {\n        const error = await response.json();\n        toast.error(error.error || 'Failed to add customer');\n      }\n    } catch (error) {\n      console.error('Error adding customer:', error);\n      toast.error('Failed to add customer');\n    }\n  };\n\n  const handleTestMessage = async () => {\n    if (!testMessage.to || (!testMessage.body && testMessage.media.length === 0)) {\n      toast.error('Recipient and message body or media are required');\n      return;\n    }\n    \n    // In a real app, you would upload media files to a server and get URLs\n    // For this demo, we'll just use placeholder URLs if media is attached\n    const mediaUrls = testMessage.media.length > 0 ? [\n      'https://placehold.co/600x400',\n      'https://placehold.co/800x600'\n    ] : undefined;\n    \n    try {\n      const result = await twilioClient.sendMessage(testMessage.to, testMessage.body, mediaUrls);\n      if (result.success) {\n        toast.success('Test message sent successfully');\n        setTestMessage({ to: '', body: '', media: [] });\n        setMediaPreviews([]);\n      } else {\n        toast.error('Failed to send message');\n      }\n    } catch (error) {\n      toast.error('Failed to send message');\n      console.error(error);\n    }\n  };\n\n  const handleDeleteCustomer = async (id: string) => {\n    try {\n      const response = await fetch(`/api/admin/customers?id=${id}`, {\n        method: 'DELETE',\n      });\n      \n      if (response.ok) {\n        setCustomers(prev => prev.filter(customer => customer.id !== id));\n        toast.success('Customer deleted');\n      } else {\n        const error = await response.json();\n        toast.error(error.error || 'Failed to delete customer');\n      }\n    } catch (error) {\n      console.error('Error deleting customer:', error);\n      toast.error('Failed to delete customer');\n    }\n  };\n\n  const handleFileSelect = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = e.target.files;\n    if (!files) return;\n    \n    const newFiles = Array.from(files);\n    setTestMessage(prev => ({\n      ...prev,\n      media: [...prev.media, ...newFiles]\n    }));\n    \n    // Create previews for images\n    newFiles.forEach(file => {\n      if (file.type.startsWith('image/')) {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          setMediaPreviews(prev => [...prev, e.target?.result as string]);\n        };\n        reader.readAsDataURL(file);\n      }\n    });\n  };\n\n  const removeMedia = (index: number) => {\n    setTestMessage(prev => ({\n      ...prev,\n      media: prev.media.filter((_, i) => i !== index)\n    }));\n    setMediaPreviews(prev => prev.filter((_, i) => i !== index));\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Stats Cards */}\n      <motion.div \n        className=\"grid grid-cols-1 md:grid-cols-4 gap-6\"\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.6, delay: 0.1 }}\n      >\n        <Card className=\"bg-slate-800/50 border-slate-700/50\">\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"bg-blue-500/20 p-2 rounded-lg\">\n                <Users className=\"h-5 w-5 text-blue-400\" />\n              </div>\n              <div>\n                <p className=\"text-2xl font-bold text-white\">{customers.length}</p>\n                <p className=\"text-white text-sm\">Customers</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n        \n        <Card className=\"bg-slate-800/50 border-slate-700/50\">\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"bg-purple-500/20 p-2 rounded-lg\">\n                <MessageSquare className=\"h-5 w-5 text-purple-400\" />\n              </div>\n              <div>\n                <p className=\"text-2xl font-bold text-white\">1.2s</p>\n                <p className=\"text-white text-sm\">Avg Response</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n        \n        <Card className=\"bg-slate-800/50 border-slate-700/50\">\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"bg-green-500/20 p-2 rounded-lg\">\n                <Zap className=\"h-5 w-5 text-green-400\" />\n              </div>\n              <div>\n                <p className=\"text-2xl font-bold text-white\">99.9%</p>\n                <p className=\"text-white text-sm\">Uptime</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n        \n        <Card className=\"bg-slate-800/50 border-slate-700/50\">\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"bg-amber-500/20 p-2 rounded-lg\">\n                <Shield className=\"h-5 w-5 text-amber-400\" />\n              </div>\n              <div>\n                <p className=\"text-2xl font-bold text-white\">24/7</p>\n                <p className=\"text-white text-sm\">Support</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </motion.div>\n\n      {/* Main Content Grid */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Twilio Settings Card */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6, delay: 0.2 }}\n        >\n          <Card className=\"bg-slate-800/50 border-slate-700/50\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2 text-white\">\n                <Settings className=\"h-5 w-5 text-blue-400\" />\n                Twilio Settings\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"twilioAccountSid\" className=\"text-white\">Account SID</Label>\n                <div className=\"relative\">\n                  <Key className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-white h-4 w-4\" />\n                  <Input\n                    id=\"twilioAccountSid\"\n                    name=\"twilioAccountSid\"\n                    value={settings.twilioAccountSid}\n                    onChange={handleSettingsChange}\n                    placeholder=\"ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n                    className=\"pl-10 bg-slate-800 border-slate-700 text-white placeholder:text-white\"\n                  />\n                </div>\n              </div>\n              \n              <div className=\"space-y-2\">\n                <Label htmlFor=\"twilioAuthToken\" className=\"text-white\">Auth Token</Label>\n                <div className=\"relative\">\n                  <Key className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-white h-4 w-4\" />\n                  <Input\n                    id=\"twilioAuthToken\"\n                    name=\"twilioAuthToken\"\n                    type=\"password\"\n                    value={settings.twilioAuthToken}\n                    onChange={handleSettingsChange}\n                    placeholder=\"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n                    className=\"pl-10 bg-slate-800 border-slate-700 text-white placeholder:text-white\"\n                  />\n                </div>\n              </div>\n              \n              <div className=\"space-y-2\">\n                <Label htmlFor=\"twilioPhoneNumber\" className=\"text-white\">Twilio Phone Number</Label>\n                <div className=\"relative\">\n                  <Phone className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-white h-4 w-4\" />\n                  <Input\n                    id=\"twilioPhoneNumber\"\n                    name=\"twilioPhoneNumber\"\n                    value={settings.twilioPhoneNumber}\n                    onChange={handleSettingsChange}\n                    placeholder=\"+1234567890\"\n                    className=\"pl-10 bg-slate-800 border-slate-700 text-white placeholder:text-white\"\n                  />\n                </div>\n              </div>\n              \n              <div className=\"space-y-2\">\n                <Label htmlFor=\"webhookUrl\" className=\"text-white\">Webhook URL</Label>\n                <div className=\"relative\">\n                  <Globe className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-white h-4 w-4\" />\n                  <Input\n                    id=\"webhookUrl\"\n                    name=\"webhookUrl\"\n                    value={settings.webhookUrl}\n                    onChange={handleSettingsChange}\n                    placeholder=\"https://yourdomain.com/webhook\"\n                    className=\"pl-10 bg-slate-800 border-slate-700 text-white placeholder:text-white\"\n                  />\n                </div>\n                <p className=\"text-sm text-white\">\n                  Configure this URL in your Twilio console to receive incoming messages\n                </p>\n              </div>\n              \n              <div className=\"text-sm text-white text-center\">\n                Settings are automatically saved as you type\n              </div>\n            </CardContent>\n          </Card>\n        </motion.div>\n        \n        {/* Add Customer Card */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6, delay: 0.3 }}\n        >\n          <Card className=\"bg-slate-800/50 border-slate-700/50\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2 text-white\">\n                <Users className=\"h-5 w-5 text-purple-400\" />\n                Add New Customer\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"customerName\" className=\"text-white\">Name</Label>\n                <Input\n                  id=\"customerName\"\n                  value={newCustomer.name}\n                  onChange={(e) => setNewCustomer({...newCustomer, name: e.target.value})}\n                  placeholder=\"John Doe\"\n                  className=\"bg-slate-800 border-slate-700 text-white placeholder:text-white\"\n                />\n              </div>\n              \n              <div className=\"space-y-2\">\n                <Label htmlFor=\"customerEmail\" className=\"text-white\">Email</Label>\n                <Input\n                  id=\"customerEmail\"\n                  value={newCustomer.email}\n                  onChange={(e) => setNewCustomer({...newCustomer, email: e.target.value})}\n                  placeholder=\"john@example.com\"\n                  type=\"email\"\n                  className=\"bg-slate-800 border-slate-700 text-white placeholder:text-white\"\n                />\n              </div>\n              \n              <div className=\"space-y-2\">\n                <Label htmlFor=\"customerPhone\" className=\"text-white\">Phone Number</Label>\n                <Input\n                  id=\"customerPhone\"\n                  value={newCustomer.phone}\n                  onChange={(e) => setNewCustomer({...newCustomer, phone: e.target.value})}\n                  placeholder=\"+1234567890\"\n                  className=\"bg-slate-800 border-slate-700 text-white placeholder:text-white\"\n                />\n              </div>\n              \n              <div className=\"space-y-2\">\n                <Label htmlFor=\"customerUsername\" className=\"text-white\">Username</Label>\n                <Input\n                  id=\"customerUsername\"\n                  value={newCustomer.username}\n                  onChange={(e) => setNewCustomer({...newCustomer, username: e.target.value})}\n                  placeholder=\"johndoe\"\n                  className=\"bg-slate-800 border-slate-700 text-white placeholder:text-white\"\n                />\n              </div>\n              \n              <div className=\"space-y-2\">\n                <Label htmlFor=\"customerPassword\" className=\"text-white\">Password</Label>\n                <Input\n                  id=\"customerPassword\"\n                  type=\"password\"\n                  value={newCustomer.password}\n                  onChange={(e) => setNewCustomer({...newCustomer, password: e.target.value})}\n                  placeholder=\"Enter password\"\n                  className=\"bg-slate-800 border-slate-700 text-white placeholder:text-white\"\n                />\n              </div>\n              \n              <Button \n                onClick={handleAddCustomer} \n                className=\"w-full bg-gradient-to-r from-purple-500 to-pink-600 hover:from-purple-600 hover:to-pink-700 text-white\"\n              >\n                Add Customer\n              </Button>\n            </CardContent>\n          </Card>\n        </motion.div>\n      </div>\n      \n      {/* Test Message Card */}\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.6, delay: 0.4 }}\n      >\n        <Card className=\"bg-slate-800/50 border-slate-700/50\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2 text-white\">\n              <MessageSquare className=\"h-5 w-5 text-green-400\" />\n              Send Test Message\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"testTo\" className=\"text-white\">To</Label>\n                <Input\n                  id=\"testTo\"\n                  value={testMessage.to}\n                  onChange={(e) => setTestMessage({...testMessage, to: e.target.value})}\n                  placeholder=\"+1234567890\"\n                  className=\"bg-slate-800 border-slate-700 text-white placeholder:text-white\"\n                />\n              </div>\n              \n              <div className=\"space-y-2\">\n                <Label htmlFor=\"testBody\" className=\"text-white\">Message</Label>\n                <Textarea\n                  id=\"testBody\"\n                  value={testMessage.body}\n                  onChange={(e) => setTestMessage({...testMessage, body: e.target.value})}\n                  placeholder=\"Hello, this is a test message\"\n                  className=\"bg-slate-800 border-slate-700 text-white placeholder:text-white\"\n                />\n              </div>\n            </div>\n            \n            {/* Media attachment section */}\n            <div className=\"space-y-2\">\n              <Label className=\"text-white\">Attachments</Label>\n              <div className=\"flex items-center gap-2\">\n                <Button \n                  variant=\"outline\" \n                  size=\"sm\"\n                  onClick={() => document.getElementById('test-media-input')?.click()}\n                  className=\"border-slate-600 text-white hover:bg-slate-700 hover:border-slate-500 bg-slate-800\"\n                >\n                  <Paperclip className=\"h-4 w-4 mr-2\" />\n                  Add Media\n                </Button>\n                <input\n                  id=\"test-media-input\"\n                  type=\"file\"\n                  className=\"hidden\"\n                  multiple\n                  accept=\"image/*,video/*\"\n                  onChange={handleFileSelect}\n                />\n                \n                {testMessage.media.length > 0 && (\n                  <span className=\"text-sm text-white\">\n                    {testMessage.media.length} file(s) selected\n                  </span>\n                )}\n              </div>\n              \n              {/* Media previews */}\n              {mediaPreviews.length > 0 && (\n                <div className=\"flex gap-2 overflow-x-auto py-2\">\n                  {mediaPreviews.map((preview, index) => (\n                    <div key={index} className=\"relative\">\n                      <img \n                        src={preview} \n                        alt=\"Preview\" \n                        className=\"h-16 w-16 rounded-lg object-cover border border-slate-600\"\n                      />\n                      <Button\n                        variant=\"ghost\"\n                        size=\"icon\"\n                        className=\"absolute -top-2 -right-2 h-5 w-5 bg-red-500 text-white rounded-full p-0\"\n                        onClick={() => removeMedia(index)}\n                      >\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-3 w-3\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                          <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n                          <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n                        </svg>\n                      </Button>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n            \n            <Button \n              onClick={handleTestMessage}\n              className=\"bg-gradient-to-r from-green-500 to-teal-600 hover:from-green-600 hover:to-teal-700 text-white\"\n            >\n              Send Test Message\n            </Button>\n          </CardContent>\n        </Card>\n      </motion.div>\n      \n      {/* Customers List */}\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.6, delay: 0.5 }}\n      >\n        <Card className=\"bg-slate-800/50 border-slate-700/50\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2 text-white\">\n              <Users className=\"h-5 w-5 text-amber-400\" />\n              Customers\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            {customers.length === 0 ? (\n              <p className=\"text-white text-center py-4\">No customers added yet</p>\n            ) : (\n              <Table>\n                <TableHeader>\n                  <TableRow className=\"hover:bg-slate-800/50\">\n                    <TableHead className=\"text-white\">Name</TableHead>\n                    <TableHead className=\"text-white\">Email</TableHead>\n                    <TableHead className=\"text-white\">Phone</TableHead>\n                    <TableHead className=\"text-white\">Username</TableHead>\n                    <TableHead className=\"text-white\">Added</TableHead>\n                    <TableHead className=\"text-white\">Status</TableHead>\n                    <TableHead className=\"text-white\">Actions</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {customers.map((customer) => (\n                    <TableRow key={customer.id} className=\"hover:bg-slate-800/30\">\n                      <TableCell className=\"font-medium text-white\">{customer.name}</TableCell>\n                      <TableCell className=\"text-white\">{customer.email}</TableCell>\n                      <TableCell className=\"text-white\">{customer.phone}</TableCell>\n                      <TableCell className=\"text-white\">{customer.username}</TableCell>\n                      <TableCell className=\"text-white\">{new Date(customer.createdAt).toLocaleDateString()}</TableCell>\n                      <TableCell>\n                        <Badge variant=\"secondary\" className=\"bg-green-500/20 text-white border-0\">\n                          Active\n                        </Badge>\n                      </TableCell>\n                      <TableCell>\n                        <Button \n                          variant=\"destructive\" \n                          size=\"sm\"\n                          onClick={() => handleDeleteCustomer(customer.id)}\n                          className=\"bg-red-500/20 text-white hover:bg-red-500/30 border-0\"\n                        >\n                          Delete\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            )}\n          </CardContent>\n        </Card>\n      </motion.div>\n    </div>\n  );\n};\n\nexport default AdminDashboard;"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;AAEA,MAAM,iBAAiB;IACrB,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,gVAAQ,EAAgB;QACtD,kBAAkB;QAClB,iBAAiB;QACjB,mBAAmB;QACnB,YAAY;IACd;IAEA,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,gVAAQ,EAAa,EAAE;IACzD,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,gVAAQ,EAAC;QAC7C,MAAM;QACN,OAAO;QACP,OAAO;QACP,UAAU;QACV,UAAU;IACZ;IAEA,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,gVAAQ,EAAC;QAC7C,IAAI;QACJ,MAAM;QACN,OAAO,EAAE;IACX;IAEA,MAAM,CAAC,eAAe,iBAAiB,GAAG,IAAA,gVAAQ,EAAW,EAAE;IAE/D,0DAA0D;IAC1D,IAAA,iVAAS,EAAC;QACR,MAAM,WAAW;YACf,IAAI;gBACF,gBAAgB;gBAChB,MAAM,mBAAmB,MAAM,MAAM;gBACrC,IAAI,iBAAiB,EAAE,EAAE;oBACvB,MAAM,gBAAgB,MAAM,iBAAiB,IAAI;oBACjD,YAAY;oBAEZ,qDAAqD;oBACrD,IAAI,cAAc,gBAAgB,IAAI,cAAc,eAAe,IAAI,cAAc,iBAAiB,EAAE;wBACtG,8IAAY,CAAC,UAAU,CACrB,cAAc,gBAAgB,EAC9B,cAAc,eAAe,EAC7B,cAAc,iBAAiB;oBAEnC;gBACF;gBAEA,iBAAiB;gBACjB,MAAM,oBAAoB,MAAM,MAAM;gBACtC,IAAI,kBAAkB,EAAE,EAAE;oBACxB,MAAM,iBAAiB,MAAM,kBAAkB,IAAI;oBACnD,aAAa;gBACf;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,uBAAuB;gBACrC,iRAAK,CAAC,KAAK,CAAC;YACd;QACF;QAEA;IACF,GAAG,EAAE;IAEL,MAAM,uBAAuB,OAAO;QAClC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM;QAChC,MAAM,cAAc;YAAE,GAAG,QAAQ;YAAE,CAAC,KAAK,EAAE;QAAM;QACjD,YAAY;QAEZ,cAAc;QACd,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,uBAAuB;gBAClD,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;YACvB;YAEA,IAAI,SAAS,EAAE,EAAE;gBACf,8DAA8D;gBAC9D,IAAI,YAAY,gBAAgB,IAAI,YAAY,eAAe,IAAI,YAAY,iBAAiB,EAAE;oBAChG,8IAAY,CAAC,UAAU,CACrB,YAAY,gBAAgB,EAC5B,YAAY,eAAe,EAC3B,YAAY,iBAAiB;gBAEjC;YACF,OAAO;gBACL,MAAM,YAAY,MAAM,SAAS,IAAI;gBACrC,QAAQ,KAAK,CAAC,yBAAyB;gBACvC,iRAAK,CAAC,KAAK,CAAC,CAAC,yBAAyB,EAAE,UAAU,KAAK,IAAI,iBAAiB;YAC9E;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,0BAA0B;YACxC,iRAAK,CAAC,KAAK,CAAC;QACd;IACF;IAEA,MAAM,oBAAoB;QACxB,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,YAAY,QAAQ,IAAI,CAAC,YAAY,QAAQ,EAAE;YAC7F,iRAAK,CAAC,KAAK,CAAC;YACZ;QACF;QAEA,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,wBAAwB;gBACnD,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;YACvB;YAEA,IAAI,SAAS,EAAE,EAAE;gBACf,MAAM,SAAS,MAAM,SAAS,IAAI;gBAClC,aAAa,CAAA,OAAQ;2BAAI;wBAAM,OAAO,QAAQ;qBAAC;gBAC/C,eAAe;oBAAE,MAAM;oBAAI,OAAO;oBAAI,OAAO;oBAAI,UAAU;oBAAI,UAAU;gBAAG;gBAC5E,iRAAK,CAAC,OAAO,CAAC;YAChB,OAAO;gBACL,MAAM,QAAQ,MAAM,SAAS,IAAI;gBACjC,iRAAK,CAAC,KAAK,CAAC,MAAM,KAAK,IAAI;YAC7B;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,0BAA0B;YACxC,iRAAK,CAAC,KAAK,CAAC;QACd;IACF;IAEA,MAAM,oBAAoB;QACxB,IAAI,CAAC,YAAY,EAAE,IAAK,CAAC,YAAY,IAAI,IAAI,YAAY,KAAK,CAAC,MAAM,KAAK,GAAI;YAC5E,iRAAK,CAAC,KAAK,CAAC;YACZ;QACF;QAEA,uEAAuE;QACvE,sEAAsE;QACtE,MAAM,YAAY,YAAY,KAAK,CAAC,MAAM,GAAG,IAAI;YAC/C;YACA;SACD,GAAG;QAEJ,IAAI;YACF,MAAM,SAAS,MAAM,8IAAY,CAAC,WAAW,CAAC,YAAY,EAAE,EAAE,YAAY,IAAI,EAAE;YAChF,IAAI,OAAO,OAAO,EAAE;gBAClB,iRAAK,CAAC,OAAO,CAAC;gBACd,eAAe;oBAAE,IAAI;oBAAI,MAAM;oBAAI,OAAO,EAAE;gBAAC;gBAC7C,iBAAiB,EAAE;YACrB,OAAO;gBACL,iRAAK,CAAC,KAAK,CAAC;YACd;QACF,EAAE,OAAO,OAAO;YACd,iRAAK,CAAC,KAAK,CAAC;YACZ,QAAQ,KAAK,CAAC;QAChB;IACF;IAEA,MAAM,uBAAuB,OAAO;QAClC,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,CAAC,wBAAwB,EAAE,IAAI,EAAE;gBAC5D,QAAQ;YACV;YAEA,IAAI,SAAS,EAAE,EAAE;gBACf,aAAa,CAAA,OAAQ,KAAK,MAAM,CAAC,CAAA,WAAY,SAAS,EAAE,KAAK;gBAC7D,iRAAK,CAAC,OAAO,CAAC;YAChB,OAAO;gBACL,MAAM,QAAQ,MAAM,SAAS,IAAI;gBACjC,iRAAK,CAAC,KAAK,CAAC,MAAM,KAAK,IAAI;YAC7B;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,iRAAK,CAAC,KAAK,CAAC;QACd;IACF;IAEA,MAAM,mBAAmB,CAAC;QACxB,MAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;QAC5B,IAAI,CAAC,OAAO;QAEZ,MAAM,WAAW,MAAM,IAAI,CAAC;QAC5B,eAAe,CAAA,OAAQ,CAAC;gBACtB,GAAG,IAAI;gBACP,OAAO;uBAAI,KAAK,KAAK;uBAAK;iBAAS;YACrC,CAAC;QAED,6BAA6B;QAC7B,SAAS,OAAO,CAAC,CAAA;YACf,IAAI,KAAK,IAAI,CAAC,UAAU,CAAC,WAAW;gBAClC,MAAM,SAAS,IAAI;gBACnB,OAAO,MAAM,GAAG,CAAC;oBACf,iBAAiB,CAAA,OAAQ;+BAAI;4BAAM,EAAE,MAAM,EAAE;yBAAiB;gBAChE;gBACA,OAAO,aAAa,CAAC;YACvB;QACF;IACF;IAEA,MAAM,cAAc,CAAC;QACnB,eAAe,CAAA,OAAQ,CAAC;gBACtB,GAAG,IAAI;gBACP,OAAO,KAAK,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,IAAM,MAAM;YAC3C,CAAC;QACD,iBAAiB,CAAA,OAAQ,KAAK,MAAM,CAAC,CAAC,GAAG,IAAM,MAAM;IACvD;IAEA,qBACE,6WAAC;QAAI,WAAU;;0BAEb,6WAAC,0SAAM,CAAC,GAAG;gBACT,WAAU;gBACV,SAAS;oBAAE,SAAS;oBAAG,GAAG;gBAAG;gBAC7B,SAAS;oBAAE,SAAS;oBAAG,GAAG;gBAAE;gBAC5B,YAAY;oBAAE,UAAU;oBAAK,OAAO;gBAAI;;kCAExC,6WAAC,wIAAI;wBAAC,WAAU;kCACd,cAAA,6WAAC,+IAAW;4BAAC,WAAU;sCACrB,cAAA,6WAAC;gCAAI,WAAU;;kDACb,6WAAC;wCAAI,WAAU;kDACb,cAAA,6WAAC,iSAAK;4CAAC,WAAU;;;;;;;;;;;kDAEnB,6WAAC;;0DACC,6WAAC;gDAAE,WAAU;0DAAiC,UAAU,MAAM;;;;;;0DAC9D,6WAAC;gDAAE,WAAU;0DAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAM1C,6WAAC,wIAAI;wBAAC,WAAU;kCACd,cAAA,6WAAC,+IAAW;4BAAC,WAAU;sCACrB,cAAA,6WAAC;gCAAI,WAAU;;kDACb,6WAAC;wCAAI,WAAU;kDACb,cAAA,6WAAC,6TAAa;4CAAC,WAAU;;;;;;;;;;;kDAE3B,6WAAC;;0DACC,6WAAC;gDAAE,WAAU;0DAAgC;;;;;;0DAC7C,6WAAC;gDAAE,WAAU;0DAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAM1C,6WAAC,wIAAI;wBAAC,WAAU;kCACd,cAAA,6WAAC,+IAAW;4BAAC,WAAU;sCACrB,cAAA,6WAAC;gCAAI,WAAU;;kDACb,6WAAC;wCAAI,WAAU;kDACb,cAAA,6WAAC,2RAAG;4CAAC,WAAU;;;;;;;;;;;kDAEjB,6WAAC;;0DACC,6WAAC;gDAAE,WAAU;0DAAgC;;;;;;0DAC7C,6WAAC;gDAAE,WAAU;0DAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAM1C,6WAAC,wIAAI;wBAAC,WAAU;kCACd,cAAA,6WAAC,+IAAW;4BAAC,WAAU;sCACrB,cAAA,6WAAC;gCAAI,WAAU;;kDACb,6WAAC;wCAAI,WAAU;kDACb,cAAA,6WAAC,oSAAM;4CAAC,WAAU;;;;;;;;;;;kDAEpB,6WAAC;;0DACC,6WAAC;gDAAE,WAAU;0DAAgC;;;;;;0DAC7C,6WAAC;gDAAE,WAAU;0DAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAQ5C,6WAAC;gBAAI,WAAU;;kCAEb,6WAAC,0SAAM,CAAC,GAAG;wBACT,SAAS;4BAAE,SAAS;4BAAG,GAAG;wBAAG;wBAC7B,SAAS;4BAAE,SAAS;4BAAG,GAAG;wBAAE;wBAC5B,YAAY;4BAAE,UAAU;4BAAK,OAAO;wBAAI;kCAExC,cAAA,6WAAC,wIAAI;4BAAC,WAAU;;8CACd,6WAAC,8IAAU;8CACT,cAAA,6WAAC,6IAAS;wCAAC,WAAU;;0DACnB,6WAAC,0SAAQ;gDAAC,WAAU;;;;;;4CAA0B;;;;;;;;;;;;8CAIlD,6WAAC,+IAAW;oCAAC,WAAU;;sDACrB,6WAAC;4CAAI,WAAU;;8DACb,6WAAC,0IAAK;oDAAC,SAAQ;oDAAmB,WAAU;8DAAa;;;;;;8DACzD,6WAAC;oDAAI,WAAU;;sEACb,6WAAC,2RAAG;4DAAC,WAAU;;;;;;sEACf,6WAAC,0IAAK;4DACJ,IAAG;4DACH,MAAK;4DACL,OAAO,SAAS,gBAAgB;4DAChC,UAAU;4DACV,aAAY;4DACZ,WAAU;;;;;;;;;;;;;;;;;;sDAKhB,6WAAC;4CAAI,WAAU;;8DACb,6WAAC,0IAAK;oDAAC,SAAQ;oDAAkB,WAAU;8DAAa;;;;;;8DACxD,6WAAC;oDAAI,WAAU;;sEACb,6WAAC,2RAAG;4DAAC,WAAU;;;;;;sEACf,6WAAC,0IAAK;4DACJ,IAAG;4DACH,MAAK;4DACL,MAAK;4DACL,OAAO,SAAS,eAAe;4DAC/B,UAAU;4DACV,aAAY;4DACZ,WAAU;;;;;;;;;;;;;;;;;;sDAKhB,6WAAC;4CAAI,WAAU;;8DACb,6WAAC,0IAAK;oDAAC,SAAQ;oDAAoB,WAAU;8DAAa;;;;;;8DAC1D,6WAAC;oDAAI,WAAU;;sEACb,6WAAC,iSAAK;4DAAC,WAAU;;;;;;sEACjB,6WAAC,0IAAK;4DACJ,IAAG;4DACH,MAAK;4DACL,OAAO,SAAS,iBAAiB;4DACjC,UAAU;4DACV,aAAY;4DACZ,WAAU;;;;;;;;;;;;;;;;;;sDAKhB,6WAAC;4CAAI,WAAU;;8DACb,6WAAC,0IAAK;oDAAC,SAAQ;oDAAa,WAAU;8DAAa;;;;;;8DACnD,6WAAC;oDAAI,WAAU;;sEACb,6WAAC,iSAAK;4DAAC,WAAU;;;;;;sEACjB,6WAAC,0IAAK;4DACJ,IAAG;4DACH,MAAK;4DACL,OAAO,SAAS,UAAU;4DAC1B,UAAU;4DACV,aAAY;4DACZ,WAAU;;;;;;;;;;;;8DAGd,6WAAC;oDAAE,WAAU;8DAAqB;;;;;;;;;;;;sDAKpC,6WAAC;4CAAI,WAAU;sDAAiC;;;;;;;;;;;;;;;;;;;;;;;kCAQtD,6WAAC,0SAAM,CAAC,GAAG;wBACT,SAAS;4BAAE,SAAS;4BAAG,GAAG;wBAAG;wBAC7B,SAAS;4BAAE,SAAS;4BAAG,GAAG;wBAAE;wBAC5B,YAAY;4BAAE,UAAU;4BAAK,OAAO;wBAAI;kCAExC,cAAA,6WAAC,wIAAI;4BAAC,WAAU;;8CACd,6WAAC,8IAAU;8CACT,cAAA,6WAAC,6IAAS;wCAAC,WAAU;;0DACnB,6WAAC,iSAAK;gDAAC,WAAU;;;;;;4CAA4B;;;;;;;;;;;;8CAIjD,6WAAC,+IAAW;oCAAC,WAAU;;sDACrB,6WAAC;4CAAI,WAAU;;8DACb,6WAAC,0IAAK;oDAAC,SAAQ;oDAAe,WAAU;8DAAa;;;;;;8DACrD,6WAAC,0IAAK;oDACJ,IAAG;oDACH,OAAO,YAAY,IAAI;oDACvB,UAAU,CAAC,IAAM,eAAe;4DAAC,GAAG,WAAW;4DAAE,MAAM,EAAE,MAAM,CAAC,KAAK;wDAAA;oDACrE,aAAY;oDACZ,WAAU;;;;;;;;;;;;sDAId,6WAAC;4CAAI,WAAU;;8DACb,6WAAC,0IAAK;oDAAC,SAAQ;oDAAgB,WAAU;8DAAa;;;;;;8DACtD,6WAAC,0IAAK;oDACJ,IAAG;oDACH,OAAO,YAAY,KAAK;oDACxB,UAAU,CAAC,IAAM,eAAe;4DAAC,GAAG,WAAW;4DAAE,OAAO,EAAE,MAAM,CAAC,KAAK;wDAAA;oDACtE,aAAY;oDACZ,MAAK;oDACL,WAAU;;;;;;;;;;;;sDAId,6WAAC;4CAAI,WAAU;;8DACb,6WAAC,0IAAK;oDAAC,SAAQ;oDAAgB,WAAU;8DAAa;;;;;;8DACtD,6WAAC,0IAAK;oDACJ,IAAG;oDACH,OAAO,YAAY,KAAK;oDACxB,UAAU,CAAC,IAAM,eAAe;4DAAC,GAAG,WAAW;4DAAE,OAAO,EAAE,MAAM,CAAC,KAAK;wDAAA;oDACtE,aAAY;oDACZ,WAAU;;;;;;;;;;;;sDAId,6WAAC;4CAAI,WAAU;;8DACb,6WAAC,0IAAK;oDAAC,SAAQ;oDAAmB,WAAU;8DAAa;;;;;;8DACzD,6WAAC,0IAAK;oDACJ,IAAG;oDACH,OAAO,YAAY,QAAQ;oDAC3B,UAAU,CAAC,IAAM,eAAe;4DAAC,GAAG,WAAW;4DAAE,UAAU,EAAE,MAAM,CAAC,KAAK;wDAAA;oDACzE,aAAY;oDACZ,WAAU;;;;;;;;;;;;sDAId,6WAAC;4CAAI,WAAU;;8DACb,6WAAC,0IAAK;oDAAC,SAAQ;oDAAmB,WAAU;8DAAa;;;;;;8DACzD,6WAAC,0IAAK;oDACJ,IAAG;oDACH,MAAK;oDACL,OAAO,YAAY,QAAQ;oDAC3B,UAAU,CAAC,IAAM,eAAe;4DAAC,GAAG,WAAW;4DAAE,UAAU,EAAE,MAAM,CAAC,KAAK;wDAAA;oDACzE,aAAY;oDACZ,WAAU;;;;;;;;;;;;sDAId,6WAAC,4IAAM;4CACL,SAAS;4CACT,WAAU;sDACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAST,6WAAC,0SAAM,CAAC,GAAG;gBACT,SAAS;oBAAE,SAAS;oBAAG,GAAG;gBAAG;gBAC7B,SAAS;oBAAE,SAAS;oBAAG,GAAG;gBAAE;gBAC5B,YAAY;oBAAE,UAAU;oBAAK,OAAO;gBAAI;0BAExC,cAAA,6WAAC,wIAAI;oBAAC,WAAU;;sCACd,6WAAC,8IAAU;sCACT,cAAA,6WAAC,6IAAS;gCAAC,WAAU;;kDACnB,6WAAC,6TAAa;wCAAC,WAAU;;;;;;oCAA2B;;;;;;;;;;;;sCAIxD,6WAAC,+IAAW;4BAAC,WAAU;;8CACrB,6WAAC;oCAAI,WAAU;;sDACb,6WAAC;4CAAI,WAAU;;8DACb,6WAAC,0IAAK;oDAAC,SAAQ;oDAAS,WAAU;8DAAa;;;;;;8DAC/C,6WAAC,0IAAK;oDACJ,IAAG;oDACH,OAAO,YAAY,EAAE;oDACrB,UAAU,CAAC,IAAM,eAAe;4DAAC,GAAG,WAAW;4DAAE,IAAI,EAAE,MAAM,CAAC,KAAK;wDAAA;oDACnE,aAAY;oDACZ,WAAU;;;;;;;;;;;;sDAId,6WAAC;4CAAI,WAAU;;8DACb,6WAAC,0IAAK;oDAAC,SAAQ;oDAAW,WAAU;8DAAa;;;;;;8DACjD,6WAAC,gJAAQ;oDACP,IAAG;oDACH,OAAO,YAAY,IAAI;oDACvB,UAAU,CAAC,IAAM,eAAe;4DAAC,GAAG,WAAW;4DAAE,MAAM,EAAE,MAAM,CAAC,KAAK;wDAAA;oDACrE,aAAY;oDACZ,WAAU;;;;;;;;;;;;;;;;;;8CAMhB,6WAAC;oCAAI,WAAU;;sDACb,6WAAC,0IAAK;4CAAC,WAAU;sDAAa;;;;;;sDAC9B,6WAAC;4CAAI,WAAU;;8DACb,6WAAC,4IAAM;oDACL,SAAQ;oDACR,MAAK;oDACL,SAAS,IAAM,SAAS,cAAc,CAAC,qBAAqB;oDAC5D,WAAU;;sEAEV,6WAAC,6SAAS;4DAAC,WAAU;;;;;;wDAAiB;;;;;;;8DAGxC,6WAAC;oDACC,IAAG;oDACH,MAAK;oDACL,WAAU;oDACV,QAAQ;oDACR,QAAO;oDACP,UAAU;;;;;;gDAGX,YAAY,KAAK,CAAC,MAAM,GAAG,mBAC1B,6WAAC;oDAAK,WAAU;;wDACb,YAAY,KAAK,CAAC,MAAM;wDAAC;;;;;;;;;;;;;wCAM/B,cAAc,MAAM,GAAG,mBACtB,6WAAC;4CAAI,WAAU;sDACZ,cAAc,GAAG,CAAC,CAAC,SAAS,sBAC3B,6WAAC;oDAAgB,WAAU;;sEACzB,6WAAC;4DACC,KAAK;4DACL,KAAI;4DACJ,WAAU;;;;;;sEAEZ,6WAAC,4IAAM;4DACL,SAAQ;4DACR,MAAK;4DACL,WAAU;4DACV,SAAS,IAAM,YAAY;sEAE3B,cAAA,6WAAC;gEAAI,OAAM;gEAA6B,WAAU;gEAAU,SAAQ;gEAAY,MAAK;gEAAO,QAAO;gEAAe,aAAY;;kFAC5H,6WAAC;wEAAK,IAAG;wEAAK,IAAG;wEAAI,IAAG;wEAAI,IAAG;;;;;;kFAC/B,6WAAC;wEAAK,IAAG;wEAAI,IAAG;wEAAI,IAAG;wEAAK,IAAG;;;;;;;;;;;;;;;;;;mDAd3B;;;;;;;;;;;;;;;;8CAuBlB,6WAAC,4IAAM;oCACL,SAAS;oCACT,WAAU;8CACX;;;;;;;;;;;;;;;;;;;;;;;0BAQP,6WAAC,0SAAM,CAAC,GAAG;gBACT,SAAS;oBAAE,SAAS;oBAAG,GAAG;gBAAG;gBAC7B,SAAS;oBAAE,SAAS;oBAAG,GAAG;gBAAE;gBAC5B,YAAY;oBAAE,UAAU;oBAAK,OAAO;gBAAI;0BAExC,cAAA,6WAAC,wIAAI;oBAAC,WAAU;;sCACd,6WAAC,8IAAU;sCACT,cAAA,6WAAC,6IAAS;gCAAC,WAAU;;kDACnB,6WAAC,iSAAK;wCAAC,WAAU;;;;;;oCAA2B;;;;;;;;;;;;sCAIhD,6WAAC,+IAAW;sCACT,UAAU,MAAM,KAAK,kBACpB,6WAAC;gCAAE,WAAU;0CAA8B;;;;;yFAE3C,6WAAC,0IAAK;;kDACJ,6WAAC,gJAAW;kDACV,cAAA,6WAAC,6IAAQ;4CAAC,WAAU;;8DAClB,6WAAC,8IAAS;oDAAC,WAAU;8DAAa;;;;;;8DAClC,6WAAC,8IAAS;oDAAC,WAAU;8DAAa;;;;;;8DAClC,6WAAC,8IAAS;oDAAC,WAAU;8DAAa;;;;;;8DAClC,6WAAC,8IAAS;oDAAC,WAAU;8DAAa;;;;;;8DAClC,6WAAC,8IAAS;oDAAC,WAAU;8DAAa;;;;;;8DAClC,6WAAC,8IAAS;oDAAC,WAAU;8DAAa;;;;;;8DAClC,6WAAC,8IAAS;oDAAC,WAAU;8DAAa;;;;;;;;;;;;;;;;;kDAGtC,6WAAC,8IAAS;kDACP,UAAU,GAAG,CAAC,CAAC,yBACd,6WAAC,6IAAQ;gDAAmB,WAAU;;kEACpC,6WAAC,8IAAS;wDAAC,WAAU;kEAA0B,SAAS,IAAI;;;;;;kEAC5D,6WAAC,8IAAS;wDAAC,WAAU;kEAAc,SAAS,KAAK;;;;;;kEACjD,6WAAC,8IAAS;wDAAC,WAAU;kEAAc,SAAS,KAAK;;;;;;kEACjD,6WAAC,8IAAS;wDAAC,WAAU;kEAAc,SAAS,QAAQ;;;;;;kEACpD,6WAAC,8IAAS;wDAAC,WAAU;kEAAc,IAAI,KAAK,SAAS,SAAS,EAAE,kBAAkB;;;;;;kEAClF,6WAAC,8IAAS;kEACR,cAAA,6WAAC,0IAAK;4DAAC,SAAQ;4DAAY,WAAU;sEAAsC;;;;;;;;;;;kEAI7E,6WAAC,8IAAS;kEACR,cAAA,6WAAC,4IAAM;4DACL,SAAQ;4DACR,MAAK;4DACL,SAAS,IAAM,qBAAqB,SAAS,EAAE;4DAC/C,WAAU;sEACX;;;;;;;;;;;;+CAjBU,SAAS,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+B9C;uCAEe","debugId":null}},
    {"offset": {"line": 1990, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Anthony/dyad-apps/TK%20Messaging/src/components/layout/Header.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { LogOut, Settings as SettingsIcon, Users, UserPlus } from \"lucide-react\";\nimport { toast } from \"sonner\";\nimport { usePathname } from \"next/navigation\";\n\nconst Header = () => {\n  const pathname = usePathname();\n\n  const handleLogout = () => {\n    toast.success(\"You have been logged out\");\n    if (typeof window !== \"undefined\") window.location.href = \"/\";\n  };\n\n  const handleSettings = () => {\n    if (typeof window !== \"undefined\") window.location.href = \"/settings\";\n  };\n\n  const handleContacts = () => {\n    if (typeof window !== \"undefined\") window.location.href = \"/contacts\";\n  };\n\n  const handleAddContact = () => {\n    if (typeof window !== \"undefined\") window.location.href = \"/contacts/add\";\n  };\n\n  const getPageTitle = () => {\n    if (pathname === \"/admin\") {\n      return \"Manage Twilio settings and customers\";\n    } else if (pathname === \"/dashboard\") {\n      return \"Conversations\";\n    } else if (pathname === \"/contacts\") {\n      return \"Contact Management\";\n    } else if (pathname === \"/contacts/add\") {\n      return \"Add New Contact\";\n    } else if (pathname === \"/settings\") {\n      return \"User Settings\";\n    }\n    return \"\";\n  };\n\n  const showSettingsButton = pathname !== \"/admin\" && pathname !== \"/settings\";\n  const showContactsButton = pathname !== \"/contacts\" && pathname !== \"/admin\";\n  const showAddContactButton = pathname === \"/conversations\" || pathname === \"/dashboard\";\n\n  // For admin page, show only logout button\n  if (pathname === \"/admin\") {\n    return (\n      <header className=\"border-b border-white/20\">\n        <div className=\"flex h-16 items-center justify-end px-4\">\n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            onClick={handleLogout}\n            className=\"text-blue-200 hover:text-white hover:bg-white/10\"\n            title=\"Logout\"\n          >\n            <LogOut className=\"h-5 w-5\" />\n          </Button>\n        </div>\n      </header>\n    );\n  }\n\n  return (\n    <header className=\"border-b border-white/20\">\n      <div className=\"flex h-16 items-center px-4\">\n        <div className=\"flex-1\">\n          <h1 className=\"text-lg font-semibold text-white\">{getPageTitle()}</h1>\n        </div>\n        <div className=\"flex items-center space-x-4\">\n          {showAddContactButton && (\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              onClick={handleAddContact}\n              className=\"text-blue-200 hover:text-white hover:bg-white/10\"\n              title=\"Add Contact\"\n            >\n              <UserPlus className=\"h-5 w-5\" />\n            </Button>\n          )}\n          {showContactsButton && (\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              onClick={handleContacts}\n              className=\"text-blue-200 hover:text-white hover:bg-white/10\"\n              title=\"Contacts\"\n            >\n              <Users className=\"h-5 w-5\" />\n            </Button>\n          )}\n          {showSettingsButton && (\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              onClick={handleSettings}\n              className=\"text-blue-200 hover:text-white hover:bg-white/10\"\n              title=\"Settings\"\n            >\n              <SettingsIcon className=\"h-5 w-5\" />\n            </Button>\n          )}\n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            onClick={handleLogout}\n            className=\"text-blue-200 hover:text-white hover:bg-white/10\"\n            title=\"Logout\"\n          >\n            <LogOut className=\"h-5 w-5\" />\n          </Button>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;"],"names":[],"mappings":";;;;;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AANA;;;;;;AAQA,MAAM,SAAS;IACb,MAAM,WAAW,IAAA,gRAAW;IAE5B,MAAM,eAAe;QACnB,iRAAK,CAAC,OAAO,CAAC;QACd;;IACF;IAEA,MAAM,iBAAiB;QACrB;;IACF;IAEA,MAAM,iBAAiB;QACrB;;IACF;IAEA,MAAM,mBAAmB;QACvB;;IACF;IAEA,MAAM,eAAe;QACnB,IAAI,aAAa,UAAU;YACzB,OAAO;QACT,OAAO,IAAI,aAAa,cAAc;YACpC,OAAO;QACT,OAAO,IAAI,aAAa,aAAa;YACnC,OAAO;QACT,OAAO,IAAI,aAAa,iBAAiB;YACvC,OAAO;QACT,OAAO,IAAI,aAAa,aAAa;YACnC,OAAO;QACT;QACA,OAAO;IACT;IAEA,MAAM,qBAAqB,aAAa,YAAY,aAAa;IACjE,MAAM,qBAAqB,aAAa,eAAe,aAAa;IACpE,MAAM,uBAAuB,aAAa,oBAAoB,aAAa;IAE3E,0CAA0C;IAC1C,IAAI,aAAa,UAAU;QACzB,qBACE,6WAAC;YAAO,WAAU;sBAChB,cAAA,6WAAC;gBAAI,WAAU;0BACb,cAAA,6WAAC,4IAAM;oBACL,SAAQ;oBACR,MAAK;oBACL,SAAS;oBACT,WAAU;oBACV,OAAM;8BAEN,cAAA,6WAAC,wSAAM;wBAAC,WAAU;;;;;;;;;;;;;;;;;;;;;IAK5B;IAEA,qBACE,6WAAC;QAAO,WAAU;kBAChB,cAAA,6WAAC;YAAI,WAAU;;8BACb,6WAAC;oBAAI,WAAU;8BACb,cAAA,6WAAC;wBAAG,WAAU;kCAAoC;;;;;;;;;;;8BAEpD,6WAAC;oBAAI,WAAU;;wBACZ,sCACC,6WAAC,4IAAM;4BACL,SAAQ;4BACR,MAAK;4BACL,SAAS;4BACT,WAAU;4BACV,OAAM;sCAEN,cAAA,6WAAC,8SAAQ;gCAAC,WAAU;;;;;;;;;;;wBAGvB,oCACC,6WAAC,4IAAM;4BACL,SAAQ;4BACR,MAAK;4BACL,SAAS;4BACT,WAAU;4BACV,OAAM;sCAEN,cAAA,6WAAC,iSAAK;gCAAC,WAAU;;;;;;;;;;;wBAGpB,oCACC,6WAAC,4IAAM;4BACL,SAAQ;4BACR,MAAK;4BACL,SAAS;4BACT,WAAU;4BACV,OAAM;sCAEN,cAAA,6WAAC,0SAAY;gCAAC,WAAU;;;;;;;;;;;sCAG5B,6WAAC,4IAAM;4BACL,SAAQ;4BACR,MAAK;4BACL,SAAS;4BACT,WAAU;4BACV,OAAM;sCAEN,cAAA,6WAAC,wSAAM;gCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAM9B;uCAEe","debugId":null}},
    {"offset": {"line": 2197, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Anthony/dyad-apps/TK%20Messaging/src/app/admin/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport AdminDashboard from \"@/components/admin/AdminDashboard\";\nimport Header from \"@/components/layout/Header\";\n\nexport default function AdminPage() {\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-950 via-blue-950 to-purple-900 text-white\">\n      <Header />\n      <div className=\"container py-6 flex-1 relative z-10\">\n        <AdminDashboard />\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAGA;AACA;AAJA;;;;AAMe,SAAS;IACtB,qBACE,6WAAC;QAAI,WAAU;;0BACb,6WAAC,iJAAM;;;;;0BACP,6WAAC;gBAAI,WAAU;0BACb,cAAA,6WAAC,wJAAc;;;;;;;;;;;;;;;;AAIvB","debugId":null}}]
}