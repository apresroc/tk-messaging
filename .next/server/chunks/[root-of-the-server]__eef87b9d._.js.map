{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Anthony/dyad-apps/TK%20Messaging/src/app/api/auth/login/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\r\nimport { readFile } from \"fs/promises\";\r\nimport { join } from \"path\";\r\n\r\nconst CUSTOMERS_FILE = join(process.cwd(), \"data\", \"customers.json\");\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const { username, password } = await request.json();\r\n\r\n    if (!username || !password) {\r\n      return NextResponse.json(\r\n        { error: \"Username and password are required\" },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Read customers from file\r\n    const customersData = await readFile(CUSTOMERS_FILE, \"utf8\").catch(() => \"[]\");\r\n    const customers = JSON.parse(customersData);\r\n\r\n    // Find customer by username/email and password\r\n    const customer = customers.find(\r\n      (c: any) => (c.username === username || c.email === username) && c.password === password\r\n    );\r\n\r\n    if (!customer) {\r\n      return NextResponse.json(\r\n        { error: \"Invalid username or password\" },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    // Return customer data (without password)\r\n    const { password: _, ...customerWithoutPassword } = customer;\r\n    return NextResponse.json({\r\n      success: true,\r\n      customer: customerWithoutPassword,\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error during login:\", error);\r\n    return NextResponse.json(\r\n      { error: \"Login failed\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEA,MAAM,iBAAiB,IAAA,yGAAI,EAAC,QAAQ,GAAG,IAAI,QAAQ;AAE5C,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,MAAM,QAAQ,IAAI;QAEjD,IAAI,CAAC,YAAY,CAAC,UAAU;YAC1B,OAAO,+QAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAqC,GAC9C;gBAAE,QAAQ;YAAI;QAElB;QAEA,2BAA2B;QAC3B,MAAM,gBAAgB,MAAM,IAAA,iIAAQ,EAAC,gBAAgB,QAAQ,KAAK,CAAC,IAAM;QACzE,MAAM,YAAY,KAAK,KAAK,CAAC;QAE7B,+CAA+C;QAC/C,MAAM,WAAW,UAAU,IAAI,CAC7B,CAAC,IAAW,CAAC,EAAE,QAAQ,KAAK,YAAY,EAAE,KAAK,KAAK,QAAQ,KAAK,EAAE,QAAQ,KAAK;QAGlF,IAAI,CAAC,UAAU;YACb,OAAO,+QAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA+B,GACxC;gBAAE,QAAQ;YAAI;QAElB;QAEA,0CAA0C;QAC1C,MAAM,EAAE,UAAU,CAAC,EAAE,GAAG,yBAAyB,GAAG;QACpD,OAAO,+QAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,UAAU;QACZ;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,uBAAuB;QACrC,OAAO,+QAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAe,GACxB;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}