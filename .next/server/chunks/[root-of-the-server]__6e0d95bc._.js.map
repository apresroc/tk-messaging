{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Anthony/dyad-apps/TK%20Messaging/src/app/api/twilio/send-message/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\r\nimport { readFile } from \"fs/promises\";\r\nimport { join } from \"path\";\r\nimport twilio from \"twilio\";\r\n\r\nconst SETTINGS_FILE = join(process.cwd(), \"data\", \"admin-settings.json\");\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    // Load Twilio settings\r\n    const settingsData = await readFile(SETTINGS_FILE, \"utf8\");\r\n    const settings = JSON.parse(settingsData);\r\n    \r\n    if (!settings.twilioAccountSid || !settings.twilioAuthToken || !settings.twilioPhoneNumber) {\r\n      return NextResponse.json(\r\n        { error: \"Twilio settings not configured\" },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Parse request body\r\n    const { to, body, mediaUrl } = await request.json();\r\n    \r\n    if (!to || !body) {\r\n      return NextResponse.json(\r\n        { error: \"Recipient and message body are required\" },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Initialize Twilio client\r\n    const client = twilio(settings.twilioAccountSid, settings.twilioAuthToken);\r\n\r\n    // Send message\r\n    const message = await client.messages.create({\r\n      body: body,\r\n      from: settings.twilioPhoneNumber,\r\n      to: to,\r\n      mediaUrl: mediaUrl || undefined\r\n    });\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      messageId: message.sid,\r\n      status: message.status\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error(\"Error sending Twilio message:\", error);\r\n    return NextResponse.json(\r\n      { error: \"Failed to send message\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;AAEA,MAAM,gBAAgB,IAAA,yGAAI,EAAC,QAAQ,GAAG,IAAI,QAAQ;AAE3C,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,uBAAuB;QACvB,MAAM,eAAe,MAAM,IAAA,iIAAQ,EAAC,eAAe;QACnD,MAAM,WAAW,KAAK,KAAK,CAAC;QAE5B,IAAI,CAAC,SAAS,gBAAgB,IAAI,CAAC,SAAS,eAAe,IAAI,CAAC,SAAS,iBAAiB,EAAE;YAC1F,OAAO,+QAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAiC,GAC1C;gBAAE,QAAQ;YAAI;QAElB;QAEA,qBAAqB;QACrB,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,MAAM,QAAQ,IAAI;QAEjD,IAAI,CAAC,MAAM,CAAC,MAAM;YAChB,OAAO,+QAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA0C,GACnD;gBAAE,QAAQ;YAAI;QAElB;QAEA,2BAA2B;QAC3B,MAAM,SAAS,IAAA,uMAAM,EAAC,SAAS,gBAAgB,EAAE,SAAS,eAAe;QAEzE,eAAe;QACf,MAAM,UAAU,MAAM,OAAO,QAAQ,CAAC,MAAM,CAAC;YAC3C,MAAM;YACN,MAAM,SAAS,iBAAiB;YAChC,IAAI;YACJ,UAAU,YAAY;QACxB;QAEA,OAAO,+QAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,WAAW,QAAQ,GAAG;YACtB,QAAQ,QAAQ,MAAM;QACxB;IAEF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,OAAO,+QAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAyB,GAClC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}