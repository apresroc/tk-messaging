{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Anthony/dyad-apps/TK%20Messaging/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nCard.displayName = \"Card\";\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n));\r\nCardHeader.displayName = \"CardHeader\";\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h3\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nCardTitle.displayName = \"CardTitle\";\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <p\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n));\r\nCardDescription.displayName = \"CardDescription\";\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n));\r\nCardContent.displayName = \"CardContent\";\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n));\r\nCardFooter.displayName = \"CardFooter\";\r\n\r\nexport {\r\n  Card,\r\n  CardHeader,\r\n  CardFooter,\r\n  CardTitle,\r\n  CardDescription,\r\n  CardContent,\r\n};\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,0SAAgB,MAG3B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,4TAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,4DACA;QAED,GAAG,KAAK;;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,0SAAgB,OAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,4TAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,0SAAgB,OAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,4TAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,sDACA;QAED,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,0SAAgB,OAGtC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,4TAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,0SAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,4TAAC;QAAI,KAAK;QAAK,WAAW,IAAA,4HAAE,EAAC,YAAY;QAAa,GAAG,KAAK;;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,0SAAgB,QAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,4TAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Anthony/dyad-apps/TK%20Messaging/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { Slot } from \"@radix-ui/react-slot\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\r\n        outline:\r\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-10 px-4 py-2\",\r\n        sm: \"h-9 rounded-md px-3\",\r\n        lg: \"h-11 rounded-md px-8\",\r\n        icon: \"h-10 w-10\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  },\r\n);\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean;\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\";\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    );\r\n  },\r\n);\r\nButton.displayName = \"Button\";\r\n\r\nexport { Button, buttonVariants };\r\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,IAAA,qPAAG,EACxB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,0SAAgB,MAC7B,QAA0D;QAAzD,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO;IACtD,MAAM,OAAO,UAAU,gTAAI,GAAG;IAC9B,qBACE,4TAAC;QACC,WAAW,IAAA,4HAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Anthony/dyad-apps/TK%20Messaging/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n          className,\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    );\r\n  },\r\n);\r\nInput.displayName = \"Input\";\r\n\r\nexport { Input };\r\n"],"names":[],"mappings":";;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,0SAAgB,MAC5B,QAAgC;QAA/B,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO;IAC5B,qBACE,4TAAC;QACC,MAAM;QACN,WAAW,IAAA,4HAAE,EACX,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 233, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Anthony/dyad-apps/TK%20Messaging/src/components/ui/label.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst labelVariants = cva(\r\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\r\n);\r\n\r\nconst Label = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\r\n    VariantProps<typeof labelVariants>\r\n>(({ className, ...props }, ref) => (\r\n  <LabelPrimitive.Root\r\n    ref={ref}\r\n    className={cn(labelVariants(), className)}\r\n    {...props}\r\n  />\r\n));\r\nLabel.displayName = LabelPrimitive.Root.displayName;\r\n\r\nexport { Label };\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,gBAAgB,IAAA,qPAAG,EACvB;AAGF,MAAM,sBAAQ,0SAAgB,MAI5B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,4TAAC,yRAAmB;QAClB,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;;AAGb,MAAM,WAAW,GAAG,yRAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 273, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Anthony/dyad-apps/TK%20Messaging/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst badgeVariants = cva(\r\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\r\n        secondary:\r\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        destructive:\r\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\r\n        outline: \"text-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  },\r\n);\r\n\r\nexport interface BadgeProps\r\n  extends React.HTMLAttributes<HTMLDivElement>,\r\n    VariantProps<typeof badgeVariants> {}\r\n\r\nfunction Badge({ className, variant, ...props }: BadgeProps) {\r\n  return (\r\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\r\n  );\r\n}\r\n\r\nexport { Badge, badgeVariants };\r\n"],"names":[],"mappings":";;;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,IAAA,qPAAG,EACvB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,KAA4C;QAA5C,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB,GAA5C;IACb,qBACE,4TAAC;QAAI,WAAW,IAAA,4HAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 322, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Anthony/dyad-apps/TK%20Messaging/src/components/ui/avatar.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst Avatar = React.forwardRef<\r\n  React.ElementRef<typeof AvatarPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\r\n>(({ className, ...props }, ref) => (\r\n  <AvatarPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nAvatar.displayName = AvatarPrimitive.Root.displayName;\r\n\r\nconst AvatarImage = React.forwardRef<\r\n  React.ElementRef<typeof AvatarPrimitive.Image>,\r\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\r\n>(({ className, ...props }, ref) => (\r\n  <AvatarPrimitive.Image\r\n    ref={ref}\r\n    className={cn(\"aspect-square h-full w-full\", className)}\r\n    {...props}\r\n  />\r\n));\r\nAvatarImage.displayName = AvatarPrimitive.Image.displayName;\r\n\r\nconst AvatarFallback = React.forwardRef<\r\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\r\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\r\n>(({ className, ...props }, ref) => (\r\n  <AvatarPrimitive.Fallback\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName;\r\n\r\nexport { Avatar, AvatarImage, AvatarFallback };\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,uBAAS,0SAAgB,MAG7B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,4TAAC,0RAAoB;QACnB,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,iEACA;QAED,GAAG,KAAK;;;;;;;;AAGb,OAAO,WAAW,GAAG,0RAAoB,CAAC,WAAW;AAErD,MAAM,4BAAc,0SAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,4TAAC,2RAAqB;QACpB,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,+BAA+B;QAC5C,GAAG,KAAK;;;;;;;;AAGb,YAAY,WAAW,GAAG,2RAAqB,CAAC,WAAW;AAE3D,MAAM,+BAAiB,0SAAgB,OAGrC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,4TAAC,8RAAwB;QACvB,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,wEACA;QAED,GAAG,KAAK;;;;;;;;AAGb,eAAe,WAAW,GAAG,8RAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 395, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Anthony/dyad-apps/TK%20Messaging/src/components/user/ConversationList.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Badge } from '@/components/ui/badge';\nimport { Avatar, AvatarFallback } from '@/components/ui/avatar';\nimport { Search, MessageCircle, Clock, Phone } from 'lucide-react';\nimport { Conversation } from '@/lib/types';\nimport { motion } from 'framer-motion';\n\nconst ConversationList = ({ \n  conversations, \n  onSelectConversation \n}: { \n  conversations: Conversation[]; \n  onSelectConversation: (id: string) => void;\n}) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredConversations, setFilteredConversations] = useState<Conversation[]>(conversations);\n\n  useEffect(() => {\n    if (!searchTerm) {\n      setFilteredConversations(conversations);\n      return;\n    }\n\n    const filtered = conversations.filter(conv => \n      conv.contactName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      conv.contactPhone.includes(searchTerm) ||\n      conv.lastMessage.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    \n    setFilteredConversations(filtered);\n  }, [searchTerm, conversations]);\n\n  const formatTime = (date: Date) => {\n    const now = new Date();\n    const diff = now.getTime() - date.getTime();\n    const hours = Math.floor(diff / (1000 * 60 * 60));\n    \n    if (hours < 1) {\n      return 'Just now';\n    } else if (hours < 24) {\n      return `${hours}h ago`;\n    } else {\n      return date.toLocaleDateString();\n    }\n  };\n\n  return (\n    <Card className=\"h-full flex flex-col bg-white dark:bg-slate-800/50 border-slate-200 dark:border-slate-700/50\">\n      <CardHeader className=\"pb-3\">\n        <div className=\"flex items-center justify-between\">\n          <CardTitle className=\"text-gray-900 dark:text-white\">Conversations</CardTitle>\n          <Badge variant=\"secondary\" className=\"bg-blue-500/20 text-blue-700 dark:text-blue-300\">\n            {conversations.length}\n          </Badge>\n        </div>\n        <div className=\"relative mt-4\">\n          <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-slate-400 h-4 w-4\" />\n          <Input\n            placeholder=\"Search conversations...\"\n            className=\"pl-10 bg-white dark:bg-slate-800 border-slate-300 dark:border-slate-700 text-gray-900 dark:text-white placeholder:text-slate-400\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n        </div>\n      </CardHeader>\n      <CardContent className=\"flex-1 overflow-y-auto p-0\">\n        {filteredConversations.length === 0 ? (\n          <motion.div \n            className=\"text-center py-8 text-slate-500 dark:text-slate-400\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n          >\n            <MessageCircle className=\"mx-auto h-12 w-12 opacity-50 mb-4\" />\n            <p className=\"mt-2\">No conversations found</p>\n          </motion.div>\n        ) : (\n          <div className=\"divide-y divide-slate-200 dark:divide-slate-700/50\">\n            {filteredConversations.map((conversation, index) => (\n              <motion.div \n                key={conversation.id}\n                className=\"p-4 hover:bg-slate-50 dark:hover:bg-slate-800/50 cursor-pointer transition-all duration-200 group\"\n                onClick={() => onSelectConversation(conversation.id)}\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.3, delay: index * 0.05 }}\n                whileHover={{ scale: 1.02 }}\n              >\n                <div className=\"flex items-start gap-3\">\n                  <Avatar className=\"border-2 border-slate-300 dark:border-slate-600 group-hover:border-blue-500 transition-colors flex-shrink-0\">\n                    <AvatarFallback className=\"bg-gradient-to-r from-blue-500 to-purple-600 text-white\">\n                      {conversation.contactName.charAt(0)}\n                    </AvatarFallback>\n                  </Avatar>\n                  <div className=\"flex-1 min-w-0\">\n                    <div className=\"flex items-center justify-between\">\n                      <h3 className=\"font-semibold text-gray-900 dark:text-white truncate\">{conversation.contactName}</h3>\n                      <span className=\"text-xs text-slate-500 dark:text-slate-400 whitespace-nowrap ml-2\">\n                        {formatTime(conversation.lastMessageTime)}\n                      </span>\n                    </div>\n                    <p className=\"text-sm text-slate-600 dark:text-slate-300 truncate mt-1\">\n                      {conversation.lastMessage}\n                    </p>\n                    <div className=\"flex items-center justify-between mt-2\">\n                      <div className=\"flex items-center gap-2\">\n                        <Phone className=\"h-3 w-3 text-slate-400 dark:text-slate-500 flex-shrink-0\" />\n                        <span className=\"text-xs text-slate-500 dark:text-slate-400 truncate\">\n                          {conversation.contactPhone}\n                        </span>\n                      </div>\n                      {conversation.unreadCount > 0 && (\n                        <Badge className=\"bg-blue-500/20 text-blue-700 dark:text-blue-300 border-0 flex-shrink-0\">\n                          {conversation.unreadCount}\n                        </Badge>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </motion.div>\n            ))}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default ConversationList;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 706, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Anthony/dyad-apps/TK%20Messaging/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nexport interface TextareaProps\r\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\r\n\r\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\r\n  ({ className, ...props }, ref) => {\r\n    return (\r\n      <textarea\r\n        className={cn(\r\n          \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\r\n          className,\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    );\r\n  },\r\n);\r\nTextarea.displayName = \"Textarea\";\r\n\r\nexport { Textarea };\r\n"],"names":[],"mappings":";;;;;AAAA;AAEA;;;;AAKA,MAAM,yBAAW,0SAAgB,MAC/B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;IACtB,qBACE,4TAAC;QACC,WAAW,IAAA,4HAAE,EACX,wSACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 741, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Anthony/dyad-apps/TK%20Messaging/src/components/ui/dropdown-menu.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\";\r\nimport { Check, ChevronRight, Circle } from \"lucide-react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst DropdownMenu = DropdownMenuPrimitive.Root;\r\n\r\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger;\r\n\r\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group;\r\n\r\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal;\r\n\r\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub;\r\n\r\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup;\r\n\r\nconst DropdownMenuSubTrigger = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\r\n    inset?: boolean;\r\n  }\r\n>(({ className, inset, children, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.SubTrigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent\",\r\n      inset && \"pl-8\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\r\n  </DropdownMenuPrimitive.SubTrigger>\r\n));\r\nDropdownMenuSubTrigger.displayName =\r\n  DropdownMenuPrimitive.SubTrigger.displayName;\r\n\r\nconst DropdownMenuSubContent = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\r\n>(({ className, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.SubContent\r\n    ref={ref}\r\n    className={cn(\r\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nDropdownMenuSubContent.displayName =\r\n  DropdownMenuPrimitive.SubContent.displayName;\r\n\r\nconst DropdownMenuContent = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\r\n>(({ className, sideOffset = 4, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.Portal>\r\n    <DropdownMenuPrimitive.Content\r\n      ref={ref}\r\n      sideOffset={sideOffset}\r\n      className={cn(\r\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        className,\r\n      )}\r\n      {...props}\r\n    />\r\n  </DropdownMenuPrimitive.Portal>\r\n));\r\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName;\r\n\r\nconst DropdownMenuItem = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\r\n    inset?: boolean;\r\n  }\r\n>(({ className, inset, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      inset && \"pl-8\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName;\r\n\r\nconst DropdownMenuCheckboxItem = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\r\n>(({ className, children, checked, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.CheckboxItem\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className,\r\n    )}\r\n    checked={checked}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <DropdownMenuPrimitive.ItemIndicator>\r\n        <Check className=\"h-4 w-4\" />\r\n      </DropdownMenuPrimitive.ItemIndicator>\r\n    </span>\r\n    {children}\r\n  </DropdownMenuPrimitive.CheckboxItem>\r\n));\r\nDropdownMenuCheckboxItem.displayName =\r\n  DropdownMenuPrimitive.CheckboxItem.displayName;\r\n\r\nconst DropdownMenuRadioItem = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\r\n>(({ className, children, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.RadioItem\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <DropdownMenuPrimitive.ItemIndicator>\r\n        <Circle className=\"h-2 w-2 fill-current\" />\r\n      </DropdownMenuPrimitive.ItemIndicator>\r\n    </span>\r\n    {children}\r\n  </DropdownMenuPrimitive.RadioItem>\r\n));\r\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName;\r\n\r\nconst DropdownMenuLabel = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\r\n    inset?: boolean;\r\n  }\r\n>(({ className, inset, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.Label\r\n    ref={ref}\r\n    className={cn(\r\n      \"px-2 py-1.5 text-sm font-semibold\",\r\n      inset && \"pl-8\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName;\r\n\r\nconst DropdownMenuSeparator = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\r\n    {...props}\r\n  />\r\n));\r\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName;\r\n\r\nconst DropdownMenuShortcut = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLSpanElement>) => {\r\n  return (\r\n    <span\r\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\";\r\n\r\nexport {\r\n  DropdownMenu,\r\n  DropdownMenuTrigger,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuCheckboxItem,\r\n  DropdownMenuRadioItem,\r\n  DropdownMenuLabel,\r\n  DropdownMenuSeparator,\r\n  DropdownMenuShortcut,\r\n  DropdownMenuGroup,\r\n  DropdownMenuPortal,\r\n  DropdownMenuSub,\r\n  DropdownMenuSubContent,\r\n  DropdownMenuSubTrigger,\r\n  DropdownMenuRadioGroup,\r\n};\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1006, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Anthony/dyad-apps/TK%20Messaging/src/components/user/MessageThread.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Card, CardContent, CardFooter, CardHeader } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Avatar, AvatarFallback } from '@/components/ui/avatar';\nimport { Send, MessageCircle, Mail, MoreHorizontal, ArrowLeft, Trash2, UserPlus, User, Paperclip, Image, Video } from 'lucide-react';\nimport { Message, Conversation } from '@/lib/types';\nimport { twilioClient } from '@/lib/twilio-client';\nimport { toast } from 'sonner';\nimport { motion } from 'framer-motion';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu';\n\nconst MessageThread = ({ \n  conversation,\n  messages,\n  onSendMessage,\n  onBack,\n  contacts = []\n}: { \n  conversation: Conversation | null;\n  messages: Message[];\n  onSendMessage: (content: string, mediaUrl?: string[]) => void;\n  onBack?: () => void;\n  contacts?: any[];\n}) => {\n  const [newMessage, setNewMessage] = useState('');\n  const [mediaFiles, setMediaFiles] = useState<File[]>([]);\n  const [mediaPreviews, setMediaPreviews] = useState<string[]>([]);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleSend = () => {\n    if ((!newMessage.trim() && mediaFiles.length === 0) || !conversation) return;\n    \n    // In a real app, you would upload media files to a server and get URLs\n    // For this demo, we'll just use placeholder URLs\n    const mediaUrls = mediaFiles.length > 0 ? [\n      'https://placehold.co/600x400',\n      'https://placehold.co/800x600'\n    ] : undefined;\n    \n    onSendMessage(newMessage.trim(), mediaUrls);\n    setNewMessage('');\n    setMediaFiles([]);\n    setMediaPreviews([]);\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n\n  const handleFileSelect = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = e.target.files;\n    if (!files) return;\n    \n    const newFiles = Array.from(files);\n    setMediaFiles(prev => [...prev, ...newFiles]);\n    \n    // Create previews for images\n    newFiles.forEach(file => {\n      if (file.type.startsWith('image/')) {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          setMediaPreviews(prev => [...prev, e.target?.result as string]);\n        };\n        reader.readAsDataURL(file);\n      }\n    });\n  };\n\n  const removeMedia = (index: number) => {\n    setMediaFiles(prev => prev.filter((_, i) => i !== index));\n    setMediaPreviews(prev => prev.filter((_, i) => i !== index));\n  };\n\n  const handleDeleteConversation = () => {\n    if (!conversation) return;\n    toast.success(`Conversation with ${conversation.contactName} deleted`);\n    // In a real app, this would delete the conversation from the backend\n    if (onBack) onBack();\n  };\n\n\n  const handleAddToContacts = () => {\n    if (!conversation) return;\n    \n    // Check if contact already exists\n    const existingContact = contacts.find(contact => contact.phone === conversation.contactPhone);\n    if (existingContact) {\n      toast.info(`${conversation.contactName} is already in your contacts`);\n      return;\n    }\n    \n    // Add to contacts\n    const newContact = {\n      id: `contact_${Date.now()}`,\n      name: conversation.contactName,\n      phone: conversation.contactPhone,\n      email: ''\n    };\n    \n    const updatedContacts = [...contacts, newContact];\n    localStorage.setItem('contacts', JSON.stringify(updatedContacts));\n    toast.success(`${conversation.contactName} added to contacts`);\n  };\n\n  // Check if contact already exists\n  const isContactAlreadyAdded = conversation ? \n    contacts.some(contact => contact.phone === conversation.contactPhone) : false;\n\n  if (!conversation) {\n    return (\n      <Card className=\"h-full flex items-center justify-center bg-white dark:bg-slate-800/50 border-slate-200 dark:border-slate-700/50\">\n        <motion.div \n          className=\"text-center p-8 text-slate-500 dark:text-slate-400\"\n          initial={{ opacity: 0, scale: 0.9 }}\n          animate={{ opacity: 1, scale: 1 }}\n        >\n          <MessageCircle className=\"mx-auto h-16 w-16 mb-4 opacity-50\" />\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">No conversation selected</h3>\n          <p>Select a conversation from the list to start messaging</p>\n        </motion.div>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"h-full flex flex-col bg-white dark:bg-slate-800/50 border-slate-200 dark:border-slate-700/50\">\n      {/* Header with back button */}\n      <CardHeader className=\"border-b border-slate-200 dark:border-slate-700/50 p-4\">\n        <div className=\"flex items-center gap-3\">\n          {onBack && (\n            <Button \n              variant=\"ghost\" \n              size=\"icon\" \n              onClick={onBack}\n              className=\"text-slate-500 hover:text-gray-900 dark:text-slate-400 dark:hover:text-white lg:hidden\"\n            >\n              <ArrowLeft className=\"h-5 w-5\" />\n            </Button>\n          )}\n          <Avatar className=\"border-2 border-slate-300 dark:border-slate-600\">\n            <AvatarFallback className=\"bg-gradient-to-r from-blue-500 to-purple-600 text-white\">\n              {conversation.contactName.charAt(0)}\n            </AvatarFallback>\n          </Avatar>\n          <div className=\"flex-1 min-w-0\">\n            <h3 className=\"font-semibold text-gray-900 dark:text-white truncate\">{conversation.contactName}</h3>\n            <div className=\"flex items-center gap-2 mt-1\">\n              <span className=\"text-sm text-slate-500 dark:text-slate-400 truncate\">{conversation.contactPhone}</span>\n            </div>\n          </div>\n          <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Button variant=\"ghost\" size=\"icon\" className=\"text-slate-500 hover:text-gray-900 dark:text-slate-400 dark:hover:text-white\">\n                <MoreHorizontal className=\"h-4 w-4\" />\n              </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent align=\"end\" className=\"w-48\">\n              <DropdownMenuItem onClick={handleDeleteConversation}>\n                <Trash2 className=\"mr-2 h-4 w-4\" />\n                <span>Delete Conversation</span>\n              </DropdownMenuItem>\n              <DropdownMenuItem \n                onClick={handleAddToContacts}\n                disabled={isContactAlreadyAdded}\n                className={isContactAlreadyAdded ? \"opacity-50 cursor-not-allowed\" : \"\"}\n              >\n                <User className=\"mr-2 h-4 w-4\" />\n                <span>{isContactAlreadyAdded ? \"Already in Contacts\" : \"Add to Contacts\"}</span>\n              </DropdownMenuItem>\n            </DropdownMenuContent>\n          </DropdownMenu>\n        </div>\n      </CardHeader>\n      \n      <CardContent className=\"flex-1 overflow-y-auto p-4 space-y-4\">\n        {messages.length === 0 ? (\n          <motion.div \n            className=\"flex items-center justify-center h-full\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n          >\n            <p className=\"text-slate-500 dark:text-slate-400\">No messages yet. Start a conversation!</p>\n          </motion.div>\n        ) : (\n          messages.map((message, index) => (\n            <motion.div \n              key={message.id}\n              className={`flex ${message.direction === 'outbound' ? 'justify-end' : 'justify-start'}`}\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.3, delay: index * 0.05 }}\n            >\n              <div \n                className={`max-w-[85%] sm:max-w-[80%] rounded-2xl px-4 py-2 ${\n                  message.direction === 'outbound' \n                    ? 'bg-gradient-to-r from-blue-500 to-purple-600 text-white rounded-br-none' \n                    : 'bg-slate-100 dark:bg-slate-700/50 text-gray-900 dark:text-slate-200 rounded-bl-none'\n                }`}\n              >\n                {message.content && (\n                  <p className=\"whitespace-pre-wrap break-words\">{message.content}</p>\n                )}\n                \n                {/* Media previews */}\n                {message.media && message.media.length > 0 && (\n                  <div className=\"mt-2 grid grid-cols-2 gap-2\">\n                    {message.media.map((media, idx) => (\n                      <div key={idx} className=\"relative\">\n                        {media.type.startsWith('image/') ? (\n                          <img \n                            src={media.url} \n                            alt=\"Attachment\" \n                            className=\"rounded-lg max-h-40 object-cover\"\n                          />\n                        ) : media.type.startsWith('video/') ? (\n                          <div className=\"relative\">\n                            <video \n                              src={media.url} \n                              className=\"rounded-lg max-h-40 object-cover\"\n                            />\n                            <Video className=\"absolute inset-0 m-auto h-8 w-8 text-white opacity-70\" />\n                          </div>\n                        ) : (\n                          <div className=\"flex items-center gap-2 p-2 bg-black/10 rounded-lg\">\n                            <Paperclip className=\"h-4 w-4\" />\n                            <span className=\"text-sm truncate\">Attachment</span>\n                          </div>\n                        )}\n                      </div>\n                    ))}\n                  </div>\n                )}\n                \n                <div className={`text-xs mt-1 flex items-center gap-2 ${\n                  message.direction === 'outbound' ? 'text-blue-100/70' : 'text-slate-500 dark:text-slate-400'\n                }`}>\n                  <span>{message.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</span>\n                  {message.direction === 'outbound' && (\n                    <span className=\"flex items-center gap-1\">\n                      {message.status === 'sent' && '✓'}\n                      {message.status === 'delivered' && '✓✓'}\n                      {message.status === 'failed' && '⚠️'}\n                    </span>\n                  )}\n                </div>\n              </div>\n            </motion.div>\n          ))\n        )}\n        <div ref={messagesEndRef} />\n      </CardContent>\n      \n      <CardFooter className=\"border-t border-slate-200 dark:border-slate-700/50 p-4\">\n        <div className=\"flex w-full flex-col gap-2\">\n          {/* Media previews */}\n          {mediaPreviews.length > 0 && (\n            <div className=\"flex gap-2 overflow-x-auto pb-2\">\n              {mediaPreviews.map((preview, index) => (\n                <div key={index} className=\"relative\">\n                  <img \n                    src={preview} \n                    alt=\"Preview\" \n                    className=\"h-16 w-16 rounded-lg object-cover border border-slate-300 dark:border-slate-600\"\n                  />\n                  <Button\n                    variant=\"ghost\"\n                    size=\"icon\"\n                    className=\"absolute -top-2 -right-2 h-5 w-5 bg-red-500 text-white rounded-full p-0\"\n                    onClick={() => removeMedia(index)}\n                  >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-3 w-3\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                      <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n                      <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n                    </svg>\n                  </Button>\n                </div>\n              ))}\n            </div>\n          )}\n          \n          <div className=\"flex gap-2\">\n            <Button \n              variant=\"outline\" \n              size=\"icon\"\n              onClick={() => fileInputRef.current?.click()}\n              className=\"border-slate-300 dark:border-slate-600 text-slate-700 dark:text-slate-300\"\n            >\n              <Paperclip className=\"h-4 w-4\" />\n              <input\n                type=\"file\"\n                ref={fileInputRef}\n                className=\"hidden\"\n                multiple\n                accept=\"image/*,video/*\"\n                onChange={handleFileSelect}\n              />\n            </Button>\n            \n            <Textarea\n              placeholder=\"Type a message...\"\n              className=\"min-h-[44px] max-h-[120px] resize-none bg-white dark:bg-slate-800 border-slate-300 dark:border-slate-700 text-gray-900 dark:text-white placeholder:text-slate-400 flex-1\"\n              value={newMessage}\n              onChange={(e) => setNewMessage(e.target.value)}\n              onKeyDown={handleKeyPress}\n            />\n            \n            <Button \n              size=\"icon\"\n              onClick={handleSend}\n              disabled={!newMessage.trim() && mediaFiles.length === 0}\n              className=\"bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 disabled:opacity-50 text-white\"\n            >\n              <Send className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        </div>\n      </CardFooter>\n    </Card>\n  );\n};\n\nexport default MessageThread;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1704, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Anthony/dyad-apps/TK%20Messaging/src/lib/twilio-client.ts"],"sourcesContent":["// Twilio client that uses the server-side API endpoint\n// This ensures Twilio credentials stay secure on the server\n\nexport class TwilioClient {\n  private isInitialized: boolean = false;\n\n  initialize(accountSid: string, authToken: string, fromNumber: string) {\n    // Store credentials for validation (not used for actual API calls)\n    this.isInitialized = true;\n    console.log('Twilio client initialized with:', { accountSid, fromNumber });\n  }\n\n  async sendMessage(to: string, body: string, mediaUrl?: string[]) {\n    try {\n      console.log('Sending message via API:', { to, body, mediaUrl });\n      \n      const response = await fetch('/api/twilio/send-message', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ to, body, mediaUrl }),\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        return {\n          success: true,\n          messageId: result.messageId,\n          status: result.status\n        };\n      } else {\n        const error = await response.json();\n        return {\n          success: false,\n          error: error.error || 'Failed to send message'\n        };\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      return {\n        success: false,\n        error: 'Network error'\n      };\n    }\n  }\n\n  async getMessages(to: string) {\n    // For now, return mock messages since we don't have a get messages API yet\n    console.log('Fetching messages for:', to);\n    \n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 500));\n    \n    // Return mock messages\n    return [\n      {\n        id: `MM${Math.random().toString(36).substr(2, 9)}`,\n        body: 'Hello! This is a sample message.',\n        direction: 'inbound',\n        timestamp: new Date(),\n        status: 'delivered'\n      }\n    ];\n  }\n}\n\nexport const twilioClient = new TwilioClient();"],"names":[],"mappings":"AAAA,uDAAuD;AACvD,4DAA4D;;;;;;;;;AAErD,MAAM;IAGX,WAAW,UAAkB,EAAE,SAAiB,EAAE,UAAkB,EAAE;QACpE,mEAAmE;QACnE,IAAI,CAAC,aAAa,GAAG;QACrB,QAAQ,GAAG,CAAC,mCAAmC;YAAE;YAAY;QAAW;IAC1E;IAEA,MAAM,YAAY,EAAU,EAAE,IAAY,EAAE,QAAmB,EAAE;QAC/D,IAAI;YACF,QAAQ,GAAG,CAAC,4BAA4B;gBAAE;gBAAI;gBAAM;YAAS;YAE7D,MAAM,WAAW,MAAM,MAAM,4BAA4B;gBACvD,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBAAE;oBAAI;oBAAM;gBAAS;YAC5C;YAEA,IAAI,SAAS,EAAE,EAAE;gBACf,MAAM,SAAS,MAAM,SAAS,IAAI;gBAClC,OAAO;oBACL,SAAS;oBACT,WAAW,OAAO,SAAS;oBAC3B,QAAQ,OAAO,MAAM;gBACvB;YACF,OAAO;gBACL,MAAM,QAAQ,MAAM,SAAS,IAAI;gBACjC,OAAO;oBACL,SAAS;oBACT,OAAO,MAAM,KAAK,IAAI;gBACxB;YACF;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,0BAA0B;YACxC,OAAO;gBACL,SAAS;gBACT,OAAO;YACT;QACF;IACF;IAEA,MAAM,YAAY,EAAU,EAAE;QAC5B,2EAA2E;QAC3E,QAAQ,GAAG,CAAC,0BAA0B;QAEtC,qBAAqB;QACrB,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;QAEjD,uBAAuB;QACvB,OAAO;YACL;gBACE,IAAI,AAAC,KAA4C,OAAxC,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,MAAM,CAAC,GAAG;gBAC9C,MAAM;gBACN,WAAW;gBACX,WAAW,IAAI;gBACf,QAAQ;YACV;SACD;IACH;;QA5DA,6OAAQ,iBAAyB;;AA6DnC;AAEO,MAAM,eAAe,IAAI","debugId":null}},
    {"offset": {"line": 1791, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Anthony/dyad-apps/TK%20Messaging/src/components/user/UserDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Conversation, Message } from '@/lib/types';\nimport ConversationList from './ConversationList';\nimport MessageThread from './MessageThread';\nimport { twilioClient } from '@/lib/twilio-client';\nimport { toast } from 'sonner';\nimport { MessageSquare, MessageSquarePlus, Settings, X, LogOut, Paperclip, Image, Video, Users, UserPlus } from 'lucide-react';\nimport { motion, AnimatePresence } from 'framer-motion';\n// Using window.location for navigation to support both environments\n\nconst UserDashboard = () => {\n  const [conversations, setConversations] = useState<Conversation[]>([]);\n  const [messages, setMessages] = useState<Record<string, Message[]>>({});\n  const [selectedConversationId, setSelectedConversationId] = useState<string | null>(null);\n  const [isMobile, setIsMobile] = useState(false);\n  const [showNewMessage, setShowNewMessage] = useState(false);\n  const [newMessage, setNewMessage] = useState({\n    phone: '',\n    content: '',\n    media: [] as File[]\n  });\n  const [contacts, setContacts] = useState<any[]>([]);\n  const [contactSuggestions, setContactSuggestions] = useState<any[]>([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n\n  // Check if we're on mobile\n  useEffect(() => {\n    const checkMobile = () => {\n      setIsMobile(window.innerWidth < 768);\n    };\n    \n    checkMobile();\n    window.addEventListener('resize', checkMobile);\n    return () => window.removeEventListener('resize', checkMobile);\n  }, []);\n\n  // Initialize data\n  useEffect(() => {\n    // Load conversations from localStorage\n    const savedConversations = localStorage.getItem('conversations');\n    if (savedConversations) {\n      const parsedConversations = JSON.parse(savedConversations);\n      // Convert date strings back to Date objects\n      const conversationsWithDates = parsedConversations.map((conv: any) => ({\n        ...conv,\n        lastMessageTime: new Date(conv.lastMessageTime)\n      }));\n      setConversations(conversationsWithDates);\n    }\n    \n    // Load messages from localStorage\n    const savedMessages = localStorage.getItem('messages');\n    if (savedMessages) {\n      const parsedMessages = JSON.parse(savedMessages);\n      // Convert date strings back to Date objects for all messages\n      const messagesWithDates: { [key: string]: Message[] } = {};\n      Object.keys(parsedMessages).forEach(conversationId => {\n        messagesWithDates[conversationId] = parsedMessages[conversationId].map((msg: any) => ({\n          ...msg,\n          timestamp: new Date(msg.timestamp)\n        }));\n      });\n      setMessages(messagesWithDates);\n    }\n    \n    // Load contacts from localStorage\n    const savedContacts = localStorage.getItem('contacts');\n    if (savedContacts) {\n      setContacts(JSON.parse(savedContacts));\n    }\n  }, []);\n\n  // Save conversations to localStorage whenever they change\n  useEffect(() => {\n    if (conversations.length > 0) {\n      localStorage.setItem('conversations', JSON.stringify(conversations));\n    }\n  }, [conversations]);\n\n  // Save messages to localStorage whenever they change\n  useEffect(() => {\n    if (Object.keys(messages).length > 0) {\n      localStorage.setItem('messages', JSON.stringify(messages));\n    }\n  }, [messages]);\n\n  // If a phone is passed via query param, open New Message prefilled\n  useEffect(() => {\n    if (typeof window === 'undefined') return;\n    const params = new URLSearchParams(window.location.search);\n    const phone = params.get('phone');\n    if (phone) {\n      setNewMessage(prev => ({ ...prev, phone }));\n      setShowNewMessage(true);\n    }\n  }, []);\n\n  const handleSelectConversation = (id: string) => {\n    setSelectedConversationId(id);\n  };\n\n  const handleBackToConversations = () => {\n    setSelectedConversationId(null);\n    if (isMobile) {\n      if (typeof window !== \"undefined\") window.location.href = \"/dashboard\";\n    }\n  };\n\n  const handleSendMessage = async (content: string, mediaUrls?: string[]) => {\n    if (!selectedConversationId) return;\n    \n    const conversation = conversations.find(c => c.id === selectedConversationId);\n    if (!conversation) return;\n    \n    // Create new message\n    const newMessage: Message = {\n      id: `msg_${Date.now()}`,\n      contactId: conversation.contactId,\n      content,\n      direction: 'outbound',\n      timestamp: new Date(),\n      status: 'sent'\n    };\n    \n    // Add media to message if provided\n    if (mediaUrls && mediaUrls.length > 0) {\n      newMessage.media = mediaUrls.map(url => ({\n        url,\n        type: url.includes('.mp4') || url.includes('.mov') ? 'video/mp4' : 'image/jpeg'\n      }));\n    }\n    \n    // Update messages state\n    setMessages(prev => ({\n      ...prev,\n      [selectedConversationId]: [...(prev[selectedConversationId] || []), newMessage]\n    }));\n    \n    // Update conversation last message\n    setConversations(prev => prev.map(conv => \n      conv.id === selectedConversationId \n        ? { \n            ...conv, \n            lastMessage: content || (mediaUrls && mediaUrls.length > 0 ? 'Sent media' : 'Empty message'),\n            lastMessageTime: new Date(),\n            unreadCount: 0\n          } \n        : conv\n    ));\n    \n    // Send via Twilio\n    try {\n      const result = await twilioClient.sendMessage(conversation.contactPhone, content, mediaUrls);\n      if (result.success) {\n        // Update message status\n        setMessages(prev => ({\n          ...prev,\n          [selectedConversationId]: prev[selectedConversationId].map(msg => \n            msg.id === newMessage.id ? { ...msg, status: 'delivered' } : msg\n          )\n        }));\n        toast.success('Message sent successfully');\n      } else {\n        // Update message status to failed\n        setMessages(prev => ({\n          ...prev,\n          [selectedConversationId]: prev[selectedConversationId].map(msg => \n            msg.id === newMessage.id ? { ...msg, status: 'failed' } : msg\n          )\n        }));\n        toast.error(`Failed to send message: ${result.error}`);\n      }\n    } catch (error) {\n      // Update message status to failed\n      setMessages(prev => ({\n        ...prev,\n        [selectedConversationId]: prev[selectedConversationId].map(msg => \n          msg.id === newMessage.id ? { ...msg, status: 'failed' } : msg\n        )\n      }));\n      toast.error('Failed to send message');\n      console.error(error);\n    }\n  };\n\n  const handleNavigateToSettings = () => {\n    if (typeof window !== 'undefined') window.location.href = '/settings';\n  };\n\n  const handleNavigateToContacts = () => {\n    if (typeof window !== 'undefined') window.location.href = '/contacts';\n  };\n\n  const handleNavigateToAddContact = () => {\n    if (typeof window !== 'undefined') window.location.href = '/contacts/add';\n  };\n\n  const handleLogout = () => {\n    toast.success('You have been logged out');\n    if (typeof window !== 'undefined') window.location.href = '/';\n  };\n\n  const handleAddNewMessage = () => {\n    setShowNewMessage(true);\n  };\n\n  // Search contacts by name or phone\n  const searchContacts = (query: string) => {\n    if (!query.trim()) {\n      setContactSuggestions([]);\n      setShowSuggestions(false);\n      return;\n    }\n\n    const suggestions = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(query.toLowerCase()) ||\n      contact.phone.includes(query)\n    );\n\n    setContactSuggestions(suggestions);\n    setShowSuggestions(suggestions.length > 0);\n  };\n\n  // Handle phone input change with contact search\n  const handlePhoneChange = (value: string) => {\n    setNewMessage({...newMessage, phone: value});\n    searchContacts(value);\n  };\n\n  // Select a contact from suggestions\n  const selectContact = (contact: any) => {\n    setNewMessage({...newMessage, phone: contact.phone});\n    setShowSuggestions(false);\n    setContactSuggestions([]);\n  };\n\n  // Check if conversation already exists for a contact\n  const getExistingConversation = (contactId: string) => {\n    return conversations.find(conv => conv.contactId === contactId);\n  };\n\n  const handleSendNewMessage = async () => {\n    if (!newMessage.phone || (!newMessage.content && newMessage.media.length === 0)) {\n      toast.error('Phone number and message content or media are required');\n      return;\n    }\n    \n    // In a real app, you would upload media files to a server and get URLs\n    // For this demo, we'll just use placeholder URLs if media is attached\n    const mediaUrls = newMessage.media.length > 0 ? [\n      'https://placehold.co/600x400',\n      'https://placehold.co/800x600'\n    ] : undefined;\n    \n    try {\n      const result = await twilioClient.sendMessage(newMessage.phone, newMessage.content, mediaUrls);\n      if (result.success) {\n        // Find or create conversation for this phone number\n        const existingConversation = conversations.find(conv => conv.contactPhone === newMessage.phone);\n        \n        if (existingConversation) {\n          // Update existing conversation\n          setConversations(prev => prev.map(conv => \n            conv.id === existingConversation.id \n              ? {\n                  ...conv,\n                  lastMessage: newMessage.content,\n                  lastMessageTime: new Date(),\n                  unreadCount: conv.unreadCount + 1\n                }\n              : conv\n          ));\n          setSelectedConversationId(existingConversation.id);\n        } else {\n          // Create new conversation\n          const newConversation: Conversation = {\n            id: `conv_${Date.now()}`,\n            contactId: `contact_${Date.now()}`,\n            contactName: newMessage.phone, // Use phone as name if no contact found\n            contactPhone: newMessage.phone,\n            lastMessage: newMessage.content,\n            lastMessageTime: new Date(),\n            unreadCount: 0\n          };\n          \n          // Check if we have a contact with this phone number\n          const matchingContact = contacts.find(contact => contact.phone === newMessage.phone);\n          if (matchingContact) {\n            newConversation.contactId = matchingContact.id;\n            newConversation.contactName = matchingContact.name;\n          }\n          \n          setConversations(prev => [newConversation, ...prev]);\n          setSelectedConversationId(newConversation.id);\n          \n          // Initialize empty messages for this conversation\n          setMessages(prev => ({\n            ...prev,\n            [newConversation.id]: []\n          }));\n        }\n        \n        toast.success('Message sent successfully');\n        setNewMessage({ phone: '', content: '', media: [] });\n        setShowNewMessage(false);\n      } else {\n        toast.error(`Failed to send message: ${result.error}`);\n      }\n    } catch (error) {\n      toast.error('Failed to send message');\n      console.error(error);\n    }\n  };\n\n  const handleFileSelect = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = e.target.files;\n    if (!files) return;\n    \n    setNewMessage(prev => ({\n      ...prev,\n      media: [...prev.media, ...Array.from(files)]\n    }));\n  };\n\n  const removeMedia = (index: number) => {\n    setNewMessage(prev => ({\n      ...prev,\n      media: prev.media.filter((_, i) => i !== index)\n    }));\n  };\n\n  const selectedConversation = conversations.find(c => c.id === selectedConversationId) || null;\n  const selectedMessages = selectedConversationId ? messages[selectedConversationId] || [] : [];\n\n  return (\n    <div className=\"space-y-0\">\n      {/* Header - Visible only on desktop */}\n      {!isMobile && (\n        <div className=\"mb-6 flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-white\">Messaging Dashboard</h1>\n            <p className=\"text-blue-200\">Manage your conversations and contacts</p>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              onClick={handleNavigateToAddContact}\n              className=\"text-blue-200 hover:text-white hover:bg-white/10\"\n              title=\"Add Contact\"\n            >\n              <UserPlus className=\"h-5 w-5\" />\n            </Button>\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              onClick={handleNavigateToContacts}\n              className=\"text-blue-200 hover:text-white hover:bg-white/10\"\n              title=\"Contacts\"\n            >\n              <Users className=\"h-5 w-5\" />\n            </Button>\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              onClick={handleAddNewMessage}\n              className=\"text-blue-200 hover:text-white hover:bg-white/10\"\n              title=\"New Message\"\n            >\n              <MessageSquarePlus className=\"h-5 w-5\" />\n            </Button>\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              onClick={handleNavigateToSettings}\n              className=\"text-blue-200 hover:text-white hover:bg-white/10\"\n              title=\"Settings\"\n            >\n              <Settings className=\"h-5 w-5\" />\n            </Button>\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              onClick={handleLogout}\n              className=\"text-blue-200 hover:text-white hover:bg-white/10\"\n              title=\"Logout\"\n            >\n              <LogOut className=\"h-5 w-5\" />\n            </Button>\n          </div>\n        </div>\n      )}\n\n      {/* Action Bar - Only visible on mobile */}\n      {isMobile && (\n        <div className=\"flex items-center justify-between p-4 bg-white/10 backdrop-blur-sm rounded-lg border border-white/20 mb-4\">\n          <div className=\"flex items-center gap-2\">\n            <MessageSquare className=\"h-6 w-6 text-blue-400\" />\n            <span className=\"text-lg font-semibold text-white\">Messages</span>\n          </div>\n          \n          <div className=\"flex items-center gap-2\">\n            {/* Add Message Button */}\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              onClick={handleAddNewMessage}\n              className=\"text-blue-200 hover:text-white hover:bg-white/10\"\n              title=\"New Message\"\n            >\n              <MessageSquarePlus className=\"h-5 w-5\" />\n            </Button>\n            \n            {/* Add Contact Button */}\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              onClick={handleNavigateToAddContact}\n              className=\"text-blue-200 hover:text-white hover:bg-white/10\"\n              title=\"Add Contact\"\n            >\n              <UserPlus className=\"h-5 w-5\" />\n            </Button>\n            \n            {/* Contacts Button */}\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              onClick={handleNavigateToContacts}\n              className=\"text-blue-200 hover:text-white hover:bg-white/10\"\n              title=\"Contacts\"\n            >\n              <Users className=\"h-5 w-5\" />\n            </Button>\n            \n            {/* Settings Button */}\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              onClick={handleNavigateToSettings}\n              className=\"text-blue-200 hover:text-white hover:bg-white/10\"\n              title=\"Settings\"\n            >\n              <Settings className=\"h-5 w-5\" />\n            </Button>\n          </div>\n        </div>\n      )}\n\n      {/* Main Content - Same for both mobile and desktop */}\n      <motion.div \n        className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\"\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.6, delay: 0.2 }}\n      >\n        {/* Conversations List - Always visible on desktop, hidden on mobile when conversation is selected */}\n        <div className={`${isMobile && selectedConversationId ? 'hidden' : 'block'} lg:col-span-1`}>\n          <ConversationList \n            conversations={conversations} \n            onSelectConversation={handleSelectConversation} \n          />\n        </div>\n        \n        {/* Message Thread - Hidden on mobile when no conversation is selected */}\n        <div className={`${isMobile && !selectedConversationId ? 'hidden' : 'block'} lg:col-span-2`}>\n          {selectedConversationId ? (\n            <MessageThread \n              conversation={selectedConversation}\n              messages={selectedMessages}\n              onSendMessage={handleSendMessage}\n              onBack={handleBackToConversations}\n              contacts={contacts}\n            />\n          ) : (\n            <Card className=\"h-full flex items-center justify-center bg-white/10 backdrop-blur-sm border-white/20\">\n              <div className=\"text-center p-8 text-blue-200\">\n                <MessageSquare className=\"mx-auto h-16 w-16 mb-4 opacity-50\" />\n                <h3 className=\"text-lg font-semibold text-white mb-2\">No conversation selected</h3>\n                <p className=\"mb-4\">Select a conversation to start messaging</p>\n              </div>\n            </Card>\n          )}\n        </div>\n      </motion.div>\n\n      {/* Contacts are now managed on /customers via the header button */}\n\n      {/* New Message Modal */}\n      <AnimatePresence>\n        {showNewMessage && (\n          <motion.div \n            className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50 p-4\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n          >\n            <motion.div \n              className=\"bg-white dark:bg-slate-800 border border-slate-200 dark:border-slate-700 rounded-2xl p-6 w-full max-w-md mx-auto\"\n              initial={{ scale: 0.9, opacity: 0 }}\n              animate={{ scale: 1, opacity: 1 }}\n              exit={{ scale: 0.9, opacity: 0 }}\n            >\n              <CardHeader className=\"p-0 mb-4 flex flex-row items-center justify-between\">\n                <CardTitle className=\"text-gray-900 dark:text-white\">New Message</CardTitle>\n                <Button \n                  variant=\"ghost\" \n                  size=\"icon\" \n                  onClick={() => setShowNewMessage(false)}\n                  className=\"text-slate-500 hover:text-gray-900 dark:text-slate-400 dark:hover:text-white\"\n                >\n                  <X className=\"h-5 w-5\" />\n                </Button>\n              </CardHeader>\n              <CardContent className=\"p-0 space-y-4\">\n                <div className=\"space-y-2\">\n                  <Label className=\"text-gray-700 dark:text-blue-100\">Phone Number or Contact Name</Label>\n                  <div className=\"relative\">\n                    <Input\n                      value={newMessage.phone}\n                      onChange={(e) => handlePhoneChange(e.target.value)}\n                      placeholder=\"+1234567890 or type contact name\"\n                      className=\"bg-white dark:bg-slate-800 border-slate-300 dark:border-slate-700 text-gray-900 dark:text-white\"\n                      onFocus={() => {\n                        if (contactSuggestions.length > 0) {\n                          setShowSuggestions(true);\n                        }\n                      }}\n                      onBlur={() => {\n                        // Delay hiding suggestions to allow clicking on them\n                        setTimeout(() => setShowSuggestions(false), 200);\n                      }}\n                    />\n                    \n                    {/* Contact Suggestions Dropdown */}\n                    {showSuggestions && contactSuggestions.length > 0 && (\n                      <div className=\"absolute top-full left-0 right-0 mt-1 bg-white dark:bg-slate-800 border border-slate-300 dark:border-slate-700 rounded-md shadow-lg z-10 max-h-48 overflow-y-auto\">\n                        {contactSuggestions.map((contact) => (\n                          <div\n                            key={contact.id}\n                            className=\"px-3 py-2 hover:bg-slate-100 dark:hover:bg-slate-700 cursor-pointer border-b border-slate-200 dark:border-slate-600 last:border-b-0\"\n                            onClick={() => selectContact(contact)}\n                          >\n                            <div className=\"font-medium text-gray-900 dark:text-white\">{contact.name}</div>\n                            <div className=\"text-sm text-gray-500 dark:text-gray-400\">{contact.phone}</div>\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                </div>\n                \n                <div className=\"space-y-2\">\n                  <Label className=\"text-gray-700 dark:text-blue-100\">Message</Label>\n                  <textarea\n                    value={newMessage.content}\n                    onChange={(e) => setNewMessage({...newMessage, content: e.target.value})}\n                    placeholder=\"Type your message here...\"\n                    className=\"w-full min-h-[120px] bg-white dark:bg-slate-800 border border-slate-300 dark:border-slate-700 text-gray-900 dark:text-white rounded-md p-3\"\n                  />\n                </div>\n                \n                {/* Media attachment section */}\n                <div className=\"space-y-2\">\n                  <Label className=\"text-gray-700 dark:text-blue-100\">Attachments</Label>\n                  <div className=\"flex items-center gap-2\">\n                    <Button \n                      variant=\"outline\" \n                      size=\"sm\"\n                      onClick={() => document.getElementById('media-input')?.click()}\n                      className=\"border-slate-300 dark:border-slate-700 text-gray-700 dark:text-slate-300\"\n                    >\n                      <Paperclip className=\"h-4 w-4 mr-2\" />\n                      Add Media\n                    </Button>\n                    <input\n                      id=\"media-input\"\n                      type=\"file\"\n                      className=\"hidden\"\n                      multiple\n                      accept=\"image/*,video/*\"\n                      onChange={handleFileSelect}\n                    />\n                    \n                    {newMessage.media.length > 0 && (\n                      <span className=\"text-sm text-slate-500 dark:text-slate-400\">\n                        {newMessage.media.length} file(s) selected\n                      </span>\n                    )}\n                  </div>\n                  \n                  {/* Media previews */}\n                  {newMessage.media.length > 0 && (\n                    <div className=\"flex gap-2 overflow-x-auto py-2\">\n                      {newMessage.media.map((file, index) => (\n                        <div key={index} className=\"relative\">\n                          {file.type.startsWith('image/') ? (\n                            <div className=\"h-16 w-16 rounded-lg border border-slate-300 dark:border-slate-600 overflow-hidden\">\n                              <Image className=\"h-full w-full p-2 text-slate-500 dark:text-slate-400\" />\n                            </div>\n                          ) : file.type.startsWith('video/') ? (\n                            <div className=\"h-16 w-16 rounded-lg border border-slate-300 dark:border-slate-600 overflow-hidden bg-slate-100 dark:bg-slate-700 flex items-center justify-center\">\n                              <Video className=\"h-6 w-6 text-slate-500 dark:text-slate-400\" />\n                            </div>\n                          ) : (\n                            <div className=\"h-16 w-16 rounded-lg border border-slate-300 dark:border-slate-600 overflow-hidden bg-slate-100 dark:bg-slate-700 flex items-center justify-center\">\n                              <Paperclip className=\"h-6 w-6 text-slate-500 dark:text-slate-400\" />\n                            </div>\n                          )}\n                          <Button\n                            variant=\"ghost\"\n                            size=\"icon\"\n                            className=\"absolute -top-2 -right-2 h-5 w-5 bg-red-500 text-white rounded-full p-0\"\n                            onClick={() => removeMedia(index)}\n                          >\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-3 w-3\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                              <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n                              <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n                            </svg>\n                          </Button>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              </CardContent>\n              <div className=\"p-0 mt-6 flex flex-col sm:flex-row justify-end gap-2\">\n                <Button \n                  variant=\"outline\" \n                  onClick={() => setShowNewMessage(false)}\n                  className=\"w-full sm:w-auto border-slate-300 dark:border-slate-700 text-gray-700 dark:text-slate-300\"\n                >\n                  Cancel\n                </Button>\n                <Button \n                  onClick={handleSendNewMessage}\n                  className=\"w-full sm:w-auto bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white\"\n                >\n                  Send Message\n                </Button>\n              </div>\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nexport default UserDashboard;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2910, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Anthony/dyad-apps/TK%20Messaging/src/app/conversations/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport UserDashboard from \"@/components/user/UserDashboard\";\n\nexport default function ConversationsPage() {\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-950 via-blue-950 to-purple-900 text-white\">\n      <div className=\"container py-6 flex-1 relative z-10\">\n        <UserDashboard />\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAGA;AAHA;;;AAKe,SAAS;IACtB,qBACE,4TAAC;QAAI,WAAU;kBACb,cAAA,4TAAC;YAAI,WAAU;sBACb,cAAA,4TAAC,yJAAa;;;;;;;;;;;;;;;AAItB;KARwB","debugId":null}}]
}